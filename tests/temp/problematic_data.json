{
  "description": "The system has Action a__0, Action a__1, Action a__2, and Action a__3.\nVariables v__0, v__1, v__3, and v__4 can be acquired by asking the user.\nVariables v__2 cannot be acquired by asking the user.\nThe system has Action ask. Action ask is less preferred than acquiring the value of a variable through other actions. Action ask lets the system ask the user about the value of any variable unless that variable is explicitly marked as cannot be acquired from the user.\nTo execute Action a__3, Variable v__0 and Variable v__1 should be known.\nAfter executing Action a__3, Variable v__4 and Variable v__3 are known.\nTo execute Action a__0, Variable v__1 and Variable v__0 should be known.\nAfter executing Action a__0, Variable v__4 and Variable v__2 are known.\nTo execute Action a__1, Variable v__2 and Variable v__1 should be known.\nAfter executing Action a__1, Variable v__3 and Variable v__4 are known.\nTo execute Action a__2, Variable v__1 and Variable v__2 should be known.\nAfter executing Action a__2, Variable v__3 and Variable v__4 are known.\nAction map is used when a value for one variable can be used for another variable. Action map maps variables with the same type.\nValues for Variable v__0 can be used for Variable v__3. Values for Variable v__3 can be used for Variable v__0. Values for Variable v__3 can be used for Variable v__2. Values for Variable v__2 can be used for Variable v__3. Values for Variable v__2 can be used for Variable v__4. Values for Variable v__4 can be used for Variable v__2. Values for Variable v__4 can be used for Variable v__1. Values for Variable v__1 can be used for Variable v__4.\nThe goal of the system is to execute Action a__0.",
  "pddl_domain": "(define (domain default_name-domain)\n    (:requirements :action-costs :typing :equality)\n    (:types\n        generic - object\n        operator - object\n        has-done-state - object\n        constraint-status - object\n        datum-state - object\n        num-retries - object\n        object\n    )\n\n    (:constants\n        False True - constraint-status\n        certain uncertain unknown - datum-state\n        new_object_generic_0 v__0 v__1 v__2 v__3 v__4 - generic\n        future past present - has-done-state\n        try_level_0 try_level_1 try_level_2 try_level_3 try_level_4 try_level_5 try_level_6 - num-retries\n        a__0 a__1 a__2 a__3 - operator\n    )\n\n    (:predicates\n        (has_done ?x1 - operator ?x2 - has-done-state)\n        (been_used ?x1 - generic)\n        (new_item ?x1 - generic)\n        (known ?x1 - generic ?x2 - datum-state)\n        (not_slotfillable ?x1 - generic)\n        (is_mappable ?x1 - generic ?x2 - generic)\n        (not_mappable ?x1 - generic ?x2 - generic)\n        (mapped ?x1 - generic)\n        (not_usable ?x1 - generic)\n        (mapped_to ?x1 - generic ?x2 - generic)\n        (connected ?x1 - operator ?x2 - num-retries ?x3 - num-retries)\n        (free ?x1 - generic)\n        (done_goal_pre )\n        (done_goal_post )\n        (has_done_a__3 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__0 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__1 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__2 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n    )\n\n    (:functions\n        (total-cost ) - number\n        (slot_goodness ?x1 - generic) - number\n        (affinity ?x1 - generic ?x2 - generic) - number\n    )\n\n    \n\n    \n    (:action enabler_operator__a__3\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__3 ?x0 ?x1 try_level_0)) (not (has_done_a__3 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__3 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__3\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__0) (known v__0 certain) (mapped_to ?x1 v__1) (known v__1 certain) (has_done_a__3 ?x0 ?x1 ?pre_level) (not (has_done_a__3 ?x0 ?x1 ?post_level)) (connected a__3 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__3 present)\n        (been_used ?x0)\n        (been_used v__0)\n        (been_used ?x1)\n        (been_used v__1)\n        (has_done_a__3 ?x0 ?x1 ?post_level)\n        (free v__4)\n        (known v__4 certain)\n        (free v__3)\n        (known v__3 certain)\n        (not (mapped v__4))\n        (not (mapped v__3))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__0\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__0 ?x0 ?x1 try_level_0)) (not (has_done_a__0 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__0 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__0\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__1) (known v__1 certain) (mapped_to ?x1 v__0) (known v__0 certain) (has_done_a__0 ?x0 ?x1 ?pre_level) (not (has_done_a__0 ?x0 ?x1 ?post_level)) (connected a__0 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__0 present)\n        (been_used ?x0)\n        (been_used v__1)\n        (been_used ?x1)\n        (been_used v__0)\n        (has_done_a__0 ?x0 ?x1 ?post_level)\n        (free v__4)\n        (known v__4 certain)\n        (free v__2)\n        (known v__2 certain)\n        (not (mapped v__4))\n        (not (mapped v__2))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__1\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__1 ?x0 ?x1 try_level_0)) (not (has_done_a__1 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__1 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__1\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__2) (known v__2 certain) (mapped_to ?x1 v__1) (known v__1 certain) (has_done_a__1 ?x0 ?x1 ?pre_level) (not (has_done_a__1 ?x0 ?x1 ?post_level)) (connected a__1 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__1 present)\n        (been_used ?x0)\n        (been_used v__2)\n        (been_used ?x1)\n        (been_used v__1)\n        (has_done_a__1 ?x0 ?x1 ?post_level)\n        (free v__3)\n        (known v__3 certain)\n        (free v__4)\n        (known v__4 certain)\n        (not (mapped v__3))\n        (not (mapped v__4))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__2\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__2 ?x0 ?x1 try_level_0)) (not (has_done_a__2 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__2 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__2\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__1) (known v__1 certain) (mapped_to ?x1 v__2) (known v__2 certain) (has_done_a__2 ?x0 ?x1 ?pre_level) (not (has_done_a__2 ?x0 ?x1 ?post_level)) (connected a__2 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__2 present)\n        (been_used ?x0)\n        (been_used v__1)\n        (been_used ?x1)\n        (been_used v__2)\n        (has_done_a__2 ?x0 ?x1 ?post_level)\n        (free v__3)\n        (known v__3 certain)\n        (free v__4)\n        (known v__4 certain)\n        (not (mapped v__3))\n        (not (mapped v__4))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action ask\n     :parameters (?x - generic)\n     :precondition (and (not (known ?x certain)) (not (not_slotfillable ?x)))\n     :effect (and\n        (free ?x)\n        (mapped_to ?x ?x)\n        (known ?x certain)\n        (not (not_usable ?x))\n        (not (mapped ?x))\n        (increase (total-cost ) (slot_goodness ?x)))\n    )\n\n\n    (:action map\n     :parameters (?x - generic ?y - generic)\n     :precondition (and (known ?x certain) (is_mappable ?x ?y) (not (not_mappable ?x ?y)) (not (mapped_to ?x ?y)) (not (new_item ?y)) (been_used ?y))\n     :effect (and\n        (known ?y certain)\n        (mapped_to ?x ?y)\n        (mapped ?x)\n        (not (been_used ?y))\n        (not (not_usable ?y))\n        (increase (total-cost ) (affinity ?x ?y)))\n    )\n\n\n    (:action map--free-alt\n     :parameters (?x - generic ?y - generic)\n     :precondition (and (known ?x certain) (is_mappable ?x ?y) (not (not_mappable ?x ?y)) (not (mapped_to ?x ?y)) (not (new_item ?y)) (been_used ?y) (free ?x))\n     :effect (and\n        (known ?y certain)\n        (mapped_to ?x ?y)\n        (mapped ?x)\n        (not (been_used ?y))\n        (not (not_usable ?y))\n        (free ?y)\n        (increase (total-cost ) 1000))\n    )\n\n)",
  "pddl_problem": "(define (problem default_name-problem)\n    (:domain default_name-domain)\n\n    (:objects\n        \n    )\n\n    (:init\n        (= (slot_goodness v__0) 100000.0)\n        (= (slot_goodness v__1) 100000.0)\n        (= (slot_goodness v__4) 100000.0)\n        (= (slot_goodness v__3) 100000.0)\n        (= (slot_goodness v__2) 200000.0)\n        (= (slot_goodness new_object_generic_0) 150000.0)\n        (= (affinity v__0 v__3) 20.0)\n        (= (affinity v__3 v__0) 20.0)\n        (= (affinity v__3 v__2) 20.0)\n        (= (affinity v__2 v__3) 20.0)\n        (= (affinity v__2 v__4) 20.0)\n        (= (affinity v__4 v__2) 20.0)\n        (= (affinity v__4 v__1) 20.0)\n        (= (affinity v__1 v__4) 20.0)\n        (= (total-cost ) 0.0)\n        (been_used v__2)\n        (been_used v__1)\n        (been_used v__0)\n        (connected a__0 try_level_0 try_level_1)\n        (connected a__3 try_level_0 try_level_1)\n        (connected a__2 try_level_0 try_level_1)\n        (connected a__1 try_level_0 try_level_1)\n        (new_item new_object_generic_0)\n        (not_slotfillable v__2)\n        (not_mappable new_object_generic_0 v__2)\n        (mapped_to v__4 v__4)\n        (mapped_to v__0 v__0)\n        (mapped_to v__3 v__3)\n        (mapped_to v__2 v__2)\n        (mapped_to new_object_generic_0 new_object_generic_0)\n        (mapped_to v__1 v__1)\n        (is_mappable v__3 v__0)\n        (is_mappable v__4 v__2)\n        (is_mappable v__2 v__4)\n        (is_mappable v__0 v__3)\n        (is_mappable v__1 v__4)\n        (is_mappable v__3 v__2)\n        (is_mappable v__2 v__3)\n        (is_mappable v__4 v__1)\n    )\n\n    (:goal\n        (has_done a__0 present)\n    )\n\n    \n    \n    (:metric minimize (total-cost ))\n)\n\n",
  "list_of_plans": [
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__0",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__0",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__0",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__0",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__0",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__0",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__0",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__0",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__0",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__0",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    }
  ],
  "sample_hash": "be1092c825a8d49775dd1224b162fd1a",
  "agent_info_generator_input": {
    "num_agents": 4,
    "num_var": 5,
    "num_input_parameters": 2,
    "num_samples": 30,
    "num_goal_agents": 1,
    "proportion_coupled_agents": 0.75,
    "proportion_slot_fillable_variables": 0.75,
    "proportion_mappable_variables": 1.0,
    "num_var_types": 0,
    "slot_filler_option": null,
    "name_generator": "NUMBER",
    "error_message": null
  },
  "compiler_planner_lag_millisecond": 236.377685546875
}
{
  "description": "The system has Action a__0, Action a__1, Action a__2, and Action a__3.\nVariables v__0, v__1, and v__4 can be acquired by asking the user.\nVariables v__2 and v__3 cannot be acquired by asking the user.\nThe system has Action ask. Action ask is less preferred than acquiring the value of a variable through other actions. Action ask lets the system ask the user about the value of any variable unless that variable is explicitly marked as cannot be acquired from the user.\nTo execute Action a__2, Variable v__1 and Variable v__0 should be known.\nAfter executing Action a__2, Variable v__4 and Variable v__2 are known.\nTo execute Action a__1, Variable v__1 and Variable v__3 should be known.\nAfter executing Action a__1, Variable v__4 and Variable v__2 are known.\nTo execute Action a__0, Variable v__0 and Variable v__1 should be known.\nAfter executing Action a__0, Variable v__3 and Variable v__4 are known.\nTo execute Action a__3, Variable v__0 and Variable v__1 should be known.\nAfter executing Action a__3, Variable v__4 and Variable v__2 are known.\nAction map is used when a value for one variable can be used for another variable. Action map maps variables with the same type.\nValues for Variable v__0 can be used for Variable v__2. Values for Variable v__2 can be used for Variable v__0. Values for Variable v__2 can be used for Variable v__3. Values for Variable v__3 can be used for Variable v__2. Values for Variable v__3 can be used for Variable v__4. Values for Variable v__4 can be used for Variable v__3. Values for Variable v__4 can be used for Variable v__1. Values for Variable v__1 can be used for Variable v__4.\nThe goal of the system is to execute Action a__2.",
  "pddl_domain": "(define (domain default_name-domain)\n    (:requirements :equality :action-costs :typing)\n    (:types\n        generic - object\n        operator - object\n        has-done-state - object\n        constraint-status - object\n        datum-state - object\n        num-retries - object\n        object\n    )\n\n    (:constants\n        False True - constraint-status\n        certain uncertain unknown - datum-state\n        new_object_generic_0 v__0 v__1 v__2 v__3 v__4 - generic\n        future past present - has-done-state\n        try_level_0 try_level_1 try_level_2 try_level_3 try_level_4 try_level_5 try_level_6 - num-retries\n        a__0 a__1 a__2 a__3 - operator\n    )\n\n    (:predicates\n        (has_done ?x1 - operator ?x2 - has-done-state)\n        (been_used ?x1 - generic)\n        (new_item ?x1 - generic)\n        (known ?x1 - generic ?x2 - datum-state)\n        (not_slotfillable ?x1 - generic)\n        (is_mappable ?x1 - generic ?x2 - generic)\n        (not_mappable ?x1 - generic ?x2 - generic)\n        (mapped ?x1 - generic)\n        (not_usable ?x1 - generic)\n        (mapped_to ?x1 - generic ?x2 - generic)\n        (connected ?x1 - operator ?x2 - num-retries ?x3 - num-retries)\n        (free ?x1 - generic)\n        (done_goal_pre )\n        (done_goal_post )\n        (has_done_a__2 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__1 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__0 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__3 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n    )\n\n    (:functions\n        (total-cost ) - number\n        (slot_goodness ?x1 - generic) - number\n        (affinity ?x1 - generic ?x2 - generic) - number\n    )\n\n    \n\n    \n    (:action enabler_operator__a__2\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__2 ?x0 ?x1 try_level_0)) (not (has_done_a__2 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__2 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__2\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__1) (known v__1 certain) (mapped_to ?x1 v__0) (known v__0 certain) (has_done_a__2 ?x0 ?x1 ?pre_level) (not (has_done_a__2 ?x0 ?x1 ?post_level)) (connected a__2 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__2 present)\n        (been_used ?x0)\n        (been_used v__1)\n        (been_used ?x1)\n        (been_used v__0)\n        (has_done_a__2 ?x0 ?x1 ?post_level)\n        (free v__4)\n        (known v__4 certain)\n        (free v__2)\n        (known v__2 certain)\n        (not (mapped v__4))\n        (not (mapped v__2))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__1\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__1 ?x0 ?x1 try_level_0)) (not (has_done_a__1 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__1 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__1\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__1) (known v__1 certain) (mapped_to ?x1 v__3) (known v__3 certain) (has_done_a__1 ?x0 ?x1 ?pre_level) (not (has_done_a__1 ?x0 ?x1 ?post_level)) (connected a__1 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__1 present)\n        (been_used ?x0)\n        (been_used v__1)\n        (been_used ?x1)\n        (been_used v__3)\n        (has_done_a__1 ?x0 ?x1 ?post_level)\n        (free v__4)\n        (known v__4 certain)\n        (free v__2)\n        (known v__2 certain)\n        (not (mapped v__4))\n        (not (mapped v__2))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__0\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__0 ?x0 ?x1 try_level_0)) (not (has_done_a__0 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__0 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__0\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__0) (known v__0 certain) (mapped_to ?x1 v__1) (known v__1 certain) (has_done_a__0 ?x0 ?x1 ?pre_level) (not (has_done_a__0 ?x0 ?x1 ?post_level)) (connected a__0 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__0 present)\n        (been_used ?x0)\n        (been_used v__0)\n        (been_used ?x1)\n        (been_used v__1)\n        (has_done_a__0 ?x0 ?x1 ?post_level)\n        (free v__3)\n        (known v__3 certain)\n        (free v__4)\n        (known v__4 certain)\n        (not (mapped v__3))\n        (not (mapped v__4))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__3\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__3 ?x0 ?x1 try_level_0)) (not (has_done_a__3 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__3 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__3\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__0) (known v__0 certain) (mapped_to ?x1 v__1) (known v__1 certain) (has_done_a__3 ?x0 ?x1 ?pre_level) (not (has_done_a__3 ?x0 ?x1 ?post_level)) (connected a__3 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__3 present)\n        (been_used ?x0)\n        (been_used v__0)\n        (been_used ?x1)\n        (been_used v__1)\n        (has_done_a__3 ?x0 ?x1 ?post_level)\n        (free v__4)\n        (known v__4 certain)\n        (free v__2)\n        (known v__2 certain)\n        (not (mapped v__4))\n        (not (mapped v__2))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action ask\n     :parameters (?x - generic)\n     :precondition (and (not (known ?x certain)) (not (not_slotfillable ?x)))\n     :effect (and\n        (free ?x)\n        (mapped_to ?x ?x)\n        (known ?x certain)\n        (not (not_usable ?x))\n        (not (mapped ?x))\n        (increase (total-cost ) (slot_goodness ?x)))\n    )\n\n\n    (:action map\n     :parameters (?x - generic ?y - generic)\n     :precondition (and (known ?x certain) (is_mappable ?x ?y) (not (not_mappable ?x ?y)) (not (mapped_to ?x ?y)) (not (new_item ?y)) (been_used ?y))\n     :effect (and\n        (known ?y certain)\n        (mapped_to ?x ?y)\n        (mapped ?x)\n        (not (been_used ?y))\n        (not (not_usable ?y))\n        (increase (total-cost ) (affinity ?x ?y)))\n    )\n\n\n    (:action map--free-alt\n     :parameters (?x - generic ?y - generic)\n     :precondition (and (known ?x certain) (is_mappable ?x ?y) (not (not_mappable ?x ?y)) (not (mapped_to ?x ?y)) (not (new_item ?y)) (been_used ?y) (free ?x))\n     :effect (and\n        (known ?y certain)\n        (mapped_to ?x ?y)\n        (mapped ?x)\n        (not (been_used ?y))\n        (not (not_usable ?y))\n        (free ?y)\n        (increase (total-cost ) 1000))\n    )\n\n)",
  "pddl_problem": "(define (problem default_name-problem)\n    (:domain default_name-domain)\n\n    (:objects\n        \n    )\n\n    (:init\n        (= (slot_goodness v__1) 100000.0)\n        (= (slot_goodness v__0) 100000.0)\n        (= (slot_goodness v__4) 100000.0)\n        (= (slot_goodness v__2) 200000.0)\n        (= (slot_goodness v__3) 200000.0)\n        (= (slot_goodness new_object_generic_0) 150000.0)\n        (= (affinity v__0 v__2) 20.0)\n        (= (affinity v__2 v__0) 20.0)\n        (= (affinity v__2 v__3) 20.0)\n        (= (affinity v__3 v__2) 20.0)\n        (= (affinity v__3 v__4) 20.0)\n        (= (affinity v__4 v__3) 20.0)\n        (= (affinity v__4 v__1) 20.0)\n        (= (affinity v__1 v__4) 20.0)\n        (= (total-cost ) 0.0)\n        (been_used v__1)\n        (been_used v__3)\n        (been_used v__0)\n        (connected a__0 try_level_0 try_level_1)\n        (connected a__1 try_level_0 try_level_1)\n        (connected a__3 try_level_0 try_level_1)\n        (connected a__2 try_level_0 try_level_1)\n        (new_item new_object_generic_0)\n        (not_slotfillable v__2)\n        (not_slotfillable v__3)\n        (not_mappable new_object_generic_0 v__3)\n        (not_mappable new_object_generic_0 v__2)\n        (mapped_to v__0 v__0)\n        (mapped_to new_object_generic_0 new_object_generic_0)\n        (mapped_to v__4 v__4)\n        (mapped_to v__1 v__1)\n        (mapped_to v__2 v__2)\n        (mapped_to v__3 v__3)\n        (is_mappable v__0 v__2)\n        (is_mappable v__3 v__2)\n        (is_mappable v__2 v__3)\n        (is_mappable v__4 v__1)\n        (is_mappable v__4 v__3)\n        (is_mappable v__1 v__4)\n        (is_mappable v__3 v__4)\n        (is_mappable v__2 v__0)\n    )\n\n    (:goal\n        (has_done a__2 present)\n    )\n\n    \n    \n    (:metric minimize (total-cost ))\n)\n\n",
  "list_of_plans": [
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    }
  ],
  "sample_hash": "e3c51f06c4560c14b385fc39fa3cf2ee",
  "agent_info_generator_input": {
    "num_agents": 4,
    "num_var": 5,
    "num_input_parameters": 2,
    "num_samples": 10,
    "num_goal_agents": 1,
    "proportion_coupled_agents": 0.5,
    "proportion_slot_fillable_variables": 0.5,
    "proportion_mappable_variables": 1.0,
    "num_var_types": 0,
    "slot_filler_option": null,
    "name_generator": "NUMBER",
    "error_message": null
  },
  "compiler_planner_lag_millisecond": 249.617919921875
}
{
  "description": "The system has Action a__0, Action a__1, Action a__2, and Action a__3.\nVariables v__0, v__1, v__3, and v__4 can be acquired by asking the user.\nVariables v__2 cannot be acquired by asking the user.\nThe system has Action ask. Action ask is less preferred than acquiring the value of a variable through other actions. Action ask lets the system ask the user about the value of any variable unless that variable is explicitly marked as cannot be acquired from the user.\nTo execute Action a__1, Variable v__1 and Variable v__2 should be known.\nAfter executing Action a__1, Variable v__3 and Variable v__2 are known.\nTo execute Action a__2, Variable v__2 and Variable v__1 should be known.\nAfter executing Action a__2, Variable v__4 and Variable v__3 are known.\nTo execute Action a__0, Variable v__1 and Variable v__0 should be known.\nAfter executing Action a__0, Variable v__4 and Variable v__2 are known.\nTo execute Action a__3, Variable v__0 and Variable v__1 should be known.\nAfter executing Action a__3, Variable v__4 and Variable v__3 are known.\nAction map is used when a value for one variable can be used for another variable. Action map maps variables with the same type.\nValues for Variable v__0 can be used for Variable v__4. Values for Variable v__4 can be used for Variable v__0. Values for Variable v__4 can be used for Variable v__2. Values for Variable v__2 can be used for Variable v__4. Values for Variable v__2 can be used for Variable v__3. Values for Variable v__3 can be used for Variable v__2. Values for Variable v__3 can be used for Variable v__1. Values for Variable v__1 can be used for Variable v__3.\nThe goal of the system is to execute Action a__3.",
  "pddl_domain": "(define (domain default_name-domain)\n    (:requirements :equality :action-costs :typing)\n    (:types\n        generic - object\n        operator - object\n        has-done-state - object\n        constraint-status - object\n        datum-state - object\n        num-retries - object\n        object\n    )\n\n    (:constants\n        False True - constraint-status\n        certain uncertain unknown - datum-state\n        new_object_generic_0 v__0 v__1 v__2 v__3 v__4 - generic\n        future past present - has-done-state\n        try_level_0 try_level_1 try_level_2 try_level_3 try_level_4 try_level_5 try_level_6 - num-retries\n        a__0 a__1 a__2 a__3 - operator\n    )\n\n    (:predicates\n        (has_done ?x1 - operator ?x2 - has-done-state)\n        (been_used ?x1 - generic)\n        (new_item ?x1 - generic)\n        (known ?x1 - generic ?x2 - datum-state)\n        (not_slotfillable ?x1 - generic)\n        (is_mappable ?x1 - generic ?x2 - generic)\n        (not_mappable ?x1 - generic ?x2 - generic)\n        (mapped ?x1 - generic)\n        (not_usable ?x1 - generic)\n        (mapped_to ?x1 - generic ?x2 - generic)\n        (connected ?x1 - operator ?x2 - num-retries ?x3 - num-retries)\n        (free ?x1 - generic)\n        (done_goal_pre )\n        (done_goal_post )\n        (has_done_a__1 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__2 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__0 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__3 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n    )\n\n    (:functions\n        (total-cost ) - number\n        (slot_goodness ?x1 - generic) - number\n        (affinity ?x1 - generic ?x2 - generic) - number\n    )\n\n    \n\n    \n    (:action enabler_operator__a__1\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__1 ?x0 ?x1 try_level_0)) (not (has_done_a__1 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__1 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__1\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__1) (known v__1 certain) (mapped_to ?x1 v__2) (known v__2 certain) (has_done_a__1 ?x0 ?x1 ?pre_level) (not (has_done_a__1 ?x0 ?x1 ?post_level)) (connected a__1 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__1 present)\n        (been_used ?x0)\n        (been_used v__1)\n        (been_used ?x1)\n        (been_used v__2)\n        (has_done_a__1 ?x0 ?x1 ?post_level)\n        (free v__3)\n        (known v__3 certain)\n        (free v__2)\n        (known v__2 certain)\n        (not (mapped v__3))\n        (not (mapped v__2))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__2\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__2 ?x0 ?x1 try_level_0)) (not (has_done_a__2 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__2 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__2\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__2) (known v__2 certain) (mapped_to ?x1 v__1) (known v__1 certain) (has_done_a__2 ?x0 ?x1 ?pre_level) (not (has_done_a__2 ?x0 ?x1 ?post_level)) (connected a__2 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__2 present)\n        (been_used ?x0)\n        (been_used v__2)\n        (been_used ?x1)\n        (been_used v__1)\n        (has_done_a__2 ?x0 ?x1 ?post_level)\n        (free v__4)\n        (known v__4 certain)\n        (free v__3)\n        (known v__3 certain)\n        (not (mapped v__4))\n        (not (mapped v__3))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__0\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__0 ?x0 ?x1 try_level_0)) (not (has_done_a__0 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__0 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__0\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__1) (known v__1 certain) (mapped_to ?x1 v__0) (known v__0 certain) (has_done_a__0 ?x0 ?x1 ?pre_level) (not (has_done_a__0 ?x0 ?x1 ?post_level)) (connected a__0 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__0 present)\n        (been_used ?x0)\n        (been_used v__1)\n        (been_used ?x1)\n        (been_used v__0)\n        (has_done_a__0 ?x0 ?x1 ?post_level)\n        (free v__4)\n        (known v__4 certain)\n        (free v__2)\n        (known v__2 certain)\n        (not (mapped v__4))\n        (not (mapped v__2))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__3\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__3 ?x0 ?x1 try_level_0)) (not (has_done_a__3 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__3 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__3\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__0) (known v__0 certain) (mapped_to ?x1 v__1) (known v__1 certain) (has_done_a__3 ?x0 ?x1 ?pre_level) (not (has_done_a__3 ?x0 ?x1 ?post_level)) (connected a__3 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__3 present)\n        (been_used ?x0)\n        (been_used v__0)\n        (been_used ?x1)\n        (been_used v__1)\n        (has_done_a__3 ?x0 ?x1 ?post_level)\n        (free v__4)\n        (known v__4 certain)\n        (free v__3)\n        (known v__3 certain)\n        (not (mapped v__4))\n        (not (mapped v__3))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action ask\n     :parameters (?x - generic)\n     :precondition (and (not (known ?x certain)) (not (not_slotfillable ?x)))\n     :effect (and\n        (free ?x)\n        (mapped_to ?x ?x)\n        (known ?x certain)\n        (not (not_usable ?x))\n        (not (mapped ?x))\n        (increase (total-cost ) (slot_goodness ?x)))\n    )\n\n\n    (:action map\n     :parameters (?x - generic ?y - generic)\n     :precondition (and (known ?x certain) (is_mappable ?x ?y) (not (not_mappable ?x ?y)) (not (mapped_to ?x ?y)) (not (new_item ?y)) (been_used ?y))\n     :effect (and\n        (known ?y certain)\n        (mapped_to ?x ?y)\n        (mapped ?x)\n        (not (been_used ?y))\n        (not (not_usable ?y))\n        (increase (total-cost ) (affinity ?x ?y)))\n    )\n\n\n    (:action map--free-alt\n     :parameters (?x - generic ?y - generic)\n     :precondition (and (known ?x certain) (is_mappable ?x ?y) (not (not_mappable ?x ?y)) (not (mapped_to ?x ?y)) (not (new_item ?y)) (been_used ?y) (free ?x))\n     :effect (and\n        (known ?y certain)\n        (mapped_to ?x ?y)\n        (mapped ?x)\n        (not (been_used ?y))\n        (not (not_usable ?y))\n        (free ?y)\n        (increase (total-cost ) 1000))\n    )\n\n)",
  "pddl_problem": "(define (problem default_name-problem)\n    (:domain default_name-domain)\n\n    (:objects\n        \n    )\n\n    (:init\n        (= (slot_goodness v__1) 100000.0)\n        (= (slot_goodness v__2) 200000.0)\n        (= (slot_goodness v__3) 100000.0)\n        (= (slot_goodness v__4) 100000.0)\n        (= (slot_goodness v__0) 100000.0)\n        (= (slot_goodness new_object_generic_0) 150000.0)\n        (= (affinity v__0 v__4) 20.0)\n        (= (affinity v__4 v__0) 20.0)\n        (= (affinity v__4 v__2) 20.0)\n        (= (affinity v__2 v__4) 20.0)\n        (= (affinity v__2 v__3) 20.0)\n        (= (affinity v__3 v__2) 20.0)\n        (= (affinity v__3 v__1) 20.0)\n        (= (affinity v__1 v__3) 20.0)\n        (= (total-cost ) 0.0)\n        (been_used v__1)\n        (been_used v__2)\n        (been_used v__0)\n        (connected a__0 try_level_0 try_level_1)\n        (connected a__1 try_level_0 try_level_1)\n        (connected a__3 try_level_0 try_level_1)\n        (connected a__2 try_level_0 try_level_1)\n        (new_item new_object_generic_0)\n        (not_slotfillable v__2)\n        (not_mappable new_object_generic_0 v__2)\n        (mapped_to v__0 v__0)\n        (mapped_to new_object_generic_0 new_object_generic_0)\n        (mapped_to v__4 v__4)\n        (mapped_to v__1 v__1)\n        (mapped_to v__2 v__2)\n        (mapped_to v__3 v__3)\n        (is_mappable v__3 v__2)\n        (is_mappable v__2 v__4)\n        (is_mappable v__2 v__3)\n        (is_mappable v__3 v__1)\n        (is_mappable v__1 v__3)\n        (is_mappable v__0 v__4)\n        (is_mappable v__4 v__2)\n        (is_mappable v__4 v__0)\n    )\n\n    (:goal\n        (has_done a__3 present)\n    )\n\n    \n    \n    (:metric minimize (total-cost ))\n)\n\n",
  "list_of_plans": [
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    }
  ],
  "sample_hash": "ac9f0a6837129266975939b907c725bd",
  "agent_info_generator_input": {
    "num_agents": 4,
    "num_var": 5,
    "num_input_parameters": 2,
    "num_samples": 10,
    "num_goal_agents": 1,
    "proportion_coupled_agents": 0.75,
    "proportion_slot_fillable_variables": 0.75,
    "proportion_mappable_variables": 1.0,
    "num_var_types": 0,
    "slot_filler_option": null,
    "name_generator": "NUMBER",
    "error_message": null
  },
  "compiler_planner_lag_millisecond": 257.140869140625
}
{
  "description": "The system has Action a__0, Action a__1, Action a__2, and Action a__3.\nVariables v__0, v__1, v__2, v__3, and v__4 can be acquired by asking the user.\nThe system has Action ask. Action ask is less preferred than acquiring the value of a variable through other actions. Action ask lets the system ask the user about the value of any variable unless that variable is explicitly marked as cannot be acquired from the user.\nTo execute Action a__2, Variable v__1 and Variable v__4 should be known.\nAfter executing Action a__2, Variable v__3 and Variable v__2 are known.\nTo execute Action a__0, Variable v__0 and Variable v__1 should be known.\nAfter executing Action a__0, Variable v__4 and Variable v__2 are known.\nTo execute Action a__1, Variable v__4 and Variable v__1 should be known.\nAfter executing Action a__1, Variable v__3 and Variable v__4 are known.\nTo execute Action a__3, Variable v__1 and Variable v__0 should be known.\nAfter executing Action a__3, Variable v__2 and Variable v__3 are known.\nAction map is used when a value for one variable can be used for another variable. Action map maps variables with the same type.\nValues for Variable v__1 can be used for Variable v__2. Values for Variable v__2 can be used for Variable v__1. Values for Variable v__2 can be used for Variable v__4. Values for Variable v__4 can be used for Variable v__2. Values for Variable v__4 can be used for Variable v__3. Values for Variable v__3 can be used for Variable v__4. Values for Variable v__3 can be used for Variable v__0. Values for Variable v__0 can be used for Variable v__3.\nThe goal of the system is to execute Action a__3.",
  "pddl_domain": "(define (domain default_name-domain)\n    (:requirements :action-costs :typing :equality)\n    (:types\n        generic - object\n        operator - object\n        has-done-state - object\n        constraint-status - object\n        datum-state - object\n        num-retries - object\n        object\n    )\n\n    (:constants\n        False True - constraint-status\n        certain uncertain unknown - datum-state\n        new_object_generic_0 v__0 v__1 v__2 v__3 v__4 - generic\n        future past present - has-done-state\n        try_level_0 try_level_1 try_level_2 try_level_3 try_level_4 try_level_5 try_level_6 - num-retries\n        a__0 a__1 a__2 a__3 - operator\n    )\n\n    (:predicates\n        (has_done ?x1 - operator ?x2 - has-done-state)\n        (been_used ?x1 - generic)\n        (new_item ?x1 - generic)\n        (known ?x1 - generic ?x2 - datum-state)\n        (not_slotfillable ?x1 - generic)\n        (is_mappable ?x1 - generic ?x2 - generic)\n        (not_mappable ?x1 - generic ?x2 - generic)\n        (mapped ?x1 - generic)\n        (not_usable ?x1 - generic)\n        (mapped_to ?x1 - generic ?x2 - generic)\n        (connected ?x1 - operator ?x2 - num-retries ?x3 - num-retries)\n        (free ?x1 - generic)\n        (done_goal_pre )\n        (done_goal_post )\n        (has_done_a__2 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__0 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__1 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__3 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n    )\n\n    (:functions\n        (total-cost ) - number\n        (slot_goodness ?x1 - generic) - number\n        (affinity ?x1 - generic ?x2 - generic) - number\n    )\n\n    \n\n    \n    (:action enabler_operator__a__2\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__2 ?x0 ?x1 try_level_0)) (not (has_done_a__2 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__2 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__2\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__1) (known v__1 certain) (mapped_to ?x1 v__4) (known v__4 certain) (has_done_a__2 ?x0 ?x1 ?pre_level) (not (has_done_a__2 ?x0 ?x1 ?post_level)) (connected a__2 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__2 present)\n        (been_used ?x0)\n        (been_used v__1)\n        (been_used ?x1)\n        (been_used v__4)\n        (has_done_a__2 ?x0 ?x1 ?post_level)\n        (free v__3)\n        (known v__3 certain)\n        (free v__2)\n        (known v__2 certain)\n        (not (mapped v__3))\n        (not (mapped v__2))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__0\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__0 ?x0 ?x1 try_level_0)) (not (has_done_a__0 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__0 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__0\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__0) (known v__0 certain) (mapped_to ?x1 v__1) (known v__1 certain) (has_done_a__0 ?x0 ?x1 ?pre_level) (not (has_done_a__0 ?x0 ?x1 ?post_level)) (connected a__0 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__0 present)\n        (been_used ?x0)\n        (been_used v__0)\n        (been_used ?x1)\n        (been_used v__1)\n        (has_done_a__0 ?x0 ?x1 ?post_level)\n        (free v__4)\n        (known v__4 certain)\n        (free v__2)\n        (known v__2 certain)\n        (not (mapped v__4))\n        (not (mapped v__2))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__1\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__1 ?x0 ?x1 try_level_0)) (not (has_done_a__1 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__1 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__1\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__4) (known v__4 certain) (mapped_to ?x1 v__1) (known v__1 certain) (has_done_a__1 ?x0 ?x1 ?pre_level) (not (has_done_a__1 ?x0 ?x1 ?post_level)) (connected a__1 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__1 present)\n        (been_used ?x0)\n        (been_used v__4)\n        (been_used ?x1)\n        (been_used v__1)\n        (has_done_a__1 ?x0 ?x1 ?post_level)\n        (free v__3)\n        (known v__3 certain)\n        (free v__4)\n        (known v__4 certain)\n        (not (mapped v__3))\n        (not (mapped v__4))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__3\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__3 ?x0 ?x1 try_level_0)) (not (has_done_a__3 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__3 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__3\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__1) (known v__1 certain) (mapped_to ?x1 v__0) (known v__0 certain) (has_done_a__3 ?x0 ?x1 ?pre_level) (not (has_done_a__3 ?x0 ?x1 ?post_level)) (connected a__3 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__3 present)\n        (been_used ?x0)\n        (been_used v__1)\n        (been_used ?x1)\n        (been_used v__0)\n        (has_done_a__3 ?x0 ?x1 ?post_level)\n        (free v__2)\n        (known v__2 certain)\n        (free v__3)\n        (known v__3 certain)\n        (not (mapped v__2))\n        (not (mapped v__3))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action ask\n     :parameters (?x - generic)\n     :precondition (and (not (known ?x certain)) (not (not_slotfillable ?x)))\n     :effect (and\n        (free ?x)\n        (mapped_to ?x ?x)\n        (known ?x certain)\n        (not (not_usable ?x))\n        (not (mapped ?x))\n        (increase (total-cost ) (slot_goodness ?x)))\n    )\n\n\n    (:action map\n     :parameters (?x - generic ?y - generic)\n     :precondition (and (known ?x certain) (is_mappable ?x ?y) (not (not_mappable ?x ?y)) (not (mapped_to ?x ?y)) (not (new_item ?y)) (been_used ?y))\n     :effect (and\n        (known ?y certain)\n        (mapped_to ?x ?y)\n        (mapped ?x)\n        (not (been_used ?y))\n        (not (not_usable ?y))\n        (increase (total-cost ) (affinity ?x ?y)))\n    )\n\n\n    (:action map--free-alt\n     :parameters (?x - generic ?y - generic)\n     :precondition (and (known ?x certain) (is_mappable ?x ?y) (not (not_mappable ?x ?y)) (not (mapped_to ?x ?y)) (not (new_item ?y)) (been_used ?y) (free ?x))\n     :effect (and\n        (known ?y certain)\n        (mapped_to ?x ?y)\n        (mapped ?x)\n        (not (been_used ?y))\n        (not (not_usable ?y))\n        (free ?y)\n        (increase (total-cost ) 1000))\n    )\n\n)",
  "pddl_problem": "(define (problem default_name-problem)\n    (:domain default_name-domain)\n\n    (:objects\n        \n    )\n\n    (:init\n        (= (slot_goodness v__1) 100000.0)\n        (= (slot_goodness v__4) 100000.0)\n        (= (slot_goodness v__3) 100000.0)\n        (= (slot_goodness v__2) 100000.0)\n        (= (slot_goodness v__0) 100000.0)\n        (= (slot_goodness new_object_generic_0) 150000.0)\n        (= (affinity v__1 v__2) 20.0)\n        (= (affinity v__2 v__1) 20.0)\n        (= (affinity v__2 v__4) 20.0)\n        (= (affinity v__4 v__2) 20.0)\n        (= (affinity v__4 v__3) 20.0)\n        (= (affinity v__3 v__4) 20.0)\n        (= (affinity v__3 v__0) 20.0)\n        (= (affinity v__0 v__3) 20.0)\n        (= (total-cost ) 0.0)\n        (been_used v__4)\n        (been_used v__1)\n        (been_used v__0)\n        (connected a__0 try_level_0 try_level_1)\n        (connected a__3 try_level_0 try_level_1)\n        (connected a__2 try_level_0 try_level_1)\n        (connected a__1 try_level_0 try_level_1)\n        (new_item new_object_generic_0)\n        (mapped_to v__4 v__4)\n        (mapped_to v__0 v__0)\n        (mapped_to v__3 v__3)\n        (mapped_to v__2 v__2)\n        (mapped_to new_object_generic_0 new_object_generic_0)\n        (mapped_to v__1 v__1)\n        (is_mappable v__3 v__0)\n        (is_mappable v__4 v__2)\n        (is_mappable v__2 v__4)\n        (is_mappable v__3 v__4)\n        (is_mappable v__0 v__3)\n        (is_mappable v__1 v__2)\n        (is_mappable v__2 v__1)\n        (is_mappable v__4 v__3)\n    )\n\n    (:goal\n        (has_done a__3 present)\n    )\n\n    \n    \n    (:metric minimize (total-cost ))\n)\n\n",
  "list_of_plans": [
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    }
  ],
  "sample_hash": "1c26891ef64df0cfad4986bf7f4bffa5",
  "agent_info_generator_input": {
    "num_agents": 4,
    "num_var": 5,
    "num_input_parameters": 2,
    "num_samples": 30,
    "num_goal_agents": 1,
    "proportion_coupled_agents": 0.75,
    "proportion_slot_fillable_variables": 1.0,
    "proportion_mappable_variables": 1.0,
    "num_var_types": 0,
    "slot_filler_option": null,
    "name_generator": "NUMBER",
    "error_message": null
  },
  "compiler_planner_lag_millisecond": 255.376953125
}
{
  "description": "The system has Action a__0, Action a__1, Action a__2, and Action a__3.\nVariables v__1 and v__4 cannot be acquired by asking the user.\nVariables v__0, v__2, and v__3 can be acquired by asking the user.\nThe system has Action ask. Action ask is less preferred than acquiring the value of a variable through other actions. Action ask lets the system ask the user about the value of any variable unless that variable is explicitly marked as cannot be acquired from the user.\nTo execute Action a__2, Variable v__4 and Variable v__2 should be known.\nAfter executing Action a__2, Variable v__1 and Variable v__3 are known.\nTo execute Action a__0, Variable v__2 and Variable v__0 should be known.\nAfter executing Action a__0, Variable v__3 and Variable v__4 are known.\nTo execute Action a__3, Variable v__2 and Variable v__0 should be known.\nAfter executing Action a__3, Variable v__3 and Variable v__1 are known.\nTo execute Action a__1, Variable v__4 and Variable v__2 should be known.\nAfter executing Action a__1, Variable v__3 and Variable v__1 are known.\nAction map is used when a value for one variable can be used for another variable. Action map maps variables with the same type.\nValues for Variable v__0 can be used for Variable v__1. Values for Variable v__1 can be used for Variable v__0. Values for Variable v__1 can be used for Variable v__4. Values for Variable v__4 can be used for Variable v__1. Values for Variable v__4 can be used for Variable v__3. Values for Variable v__3 can be used for Variable v__4. Values for Variable v__3 can be used for Variable v__2. Values for Variable v__2 can be used for Variable v__3.\nThe goal of the system is to execute Action a__3.",
  "pddl_domain": "(define (domain default_name-domain)\n    (:requirements :equality :action-costs :typing)\n    (:types\n        generic - object\n        operator - object\n        has-done-state - object\n        constraint-status - object\n        datum-state - object\n        num-retries - object\n        object\n    )\n\n    (:constants\n        False True - constraint-status\n        certain uncertain unknown - datum-state\n        new_object_generic_0 v__0 v__1 v__2 v__3 v__4 - generic\n        future past present - has-done-state\n        try_level_0 try_level_1 try_level_2 try_level_3 try_level_4 try_level_5 try_level_6 - num-retries\n        a__0 a__1 a__2 a__3 - operator\n    )\n\n    (:predicates\n        (has_done ?x1 - operator ?x2 - has-done-state)\n        (been_used ?x1 - generic)\n        (new_item ?x1 - generic)\n        (known ?x1 - generic ?x2 - datum-state)\n        (not_slotfillable ?x1 - generic)\n        (is_mappable ?x1 - generic ?x2 - generic)\n        (not_mappable ?x1 - generic ?x2 - generic)\n        (mapped ?x1 - generic)\n        (not_usable ?x1 - generic)\n        (mapped_to ?x1 - generic ?x2 - generic)\n        (connected ?x1 - operator ?x2 - num-retries ?x3 - num-retries)\n        (free ?x1 - generic)\n        (done_goal_pre )\n        (done_goal_post )\n        (has_done_a__2 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__0 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__3 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__1 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n    )\n\n    (:functions\n        (total-cost ) - number\n        (slot_goodness ?x1 - generic) - number\n        (affinity ?x1 - generic ?x2 - generic) - number\n    )\n\n    \n\n    \n    (:action enabler_operator__a__2\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__2 ?x0 ?x1 try_level_0)) (not (has_done_a__2 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__2 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__2\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__4) (known v__4 certain) (mapped_to ?x1 v__2) (known v__2 certain) (has_done_a__2 ?x0 ?x1 ?pre_level) (not (has_done_a__2 ?x0 ?x1 ?post_level)) (connected a__2 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__2 present)\n        (been_used ?x0)\n        (been_used v__4)\n        (been_used ?x1)\n        (been_used v__2)\n        (has_done_a__2 ?x0 ?x1 ?post_level)\n        (free v__1)\n        (known v__1 certain)\n        (free v__3)\n        (known v__3 certain)\n        (not (mapped v__1))\n        (not (mapped v__3))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__0\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__0 ?x0 ?x1 try_level_0)) (not (has_done_a__0 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__0 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__0\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__2) (known v__2 certain) (mapped_to ?x1 v__0) (known v__0 certain) (has_done_a__0 ?x0 ?x1 ?pre_level) (not (has_done_a__0 ?x0 ?x1 ?post_level)) (connected a__0 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__0 present)\n        (been_used ?x0)\n        (been_used v__2)\n        (been_used ?x1)\n        (been_used v__0)\n        (has_done_a__0 ?x0 ?x1 ?post_level)\n        (free v__3)\n        (known v__3 certain)\n        (free v__4)\n        (known v__4 certain)\n        (not (mapped v__3))\n        (not (mapped v__4))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__3\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__3 ?x0 ?x1 try_level_0)) (not (has_done_a__3 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__3 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__3\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__2) (known v__2 certain) (mapped_to ?x1 v__0) (known v__0 certain) (has_done_a__3 ?x0 ?x1 ?pre_level) (not (has_done_a__3 ?x0 ?x1 ?post_level)) (connected a__3 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__3 present)\n        (been_used ?x0)\n        (been_used v__2)\n        (been_used ?x1)\n        (been_used v__0)\n        (has_done_a__3 ?x0 ?x1 ?post_level)\n        (free v__3)\n        (known v__3 certain)\n        (free v__1)\n        (known v__1 certain)\n        (not (mapped v__3))\n        (not (mapped v__1))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__1\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__1 ?x0 ?x1 try_level_0)) (not (has_done_a__1 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__1 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__1\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__4) (known v__4 certain) (mapped_to ?x1 v__2) (known v__2 certain) (has_done_a__1 ?x0 ?x1 ?pre_level) (not (has_done_a__1 ?x0 ?x1 ?post_level)) (connected a__1 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__1 present)\n        (been_used ?x0)\n        (been_used v__4)\n        (been_used ?x1)\n        (been_used v__2)\n        (has_done_a__1 ?x0 ?x1 ?post_level)\n        (free v__3)\n        (known v__3 certain)\n        (free v__1)\n        (known v__1 certain)\n        (not (mapped v__3))\n        (not (mapped v__1))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action ask\n     :parameters (?x - generic)\n     :precondition (and (not (known ?x certain)) (not (not_slotfillable ?x)))\n     :effect (and\n        (free ?x)\n        (mapped_to ?x ?x)\n        (known ?x certain)\n        (not (not_usable ?x))\n        (not (mapped ?x))\n        (increase (total-cost ) (slot_goodness ?x)))\n    )\n\n\n    (:action map\n     :parameters (?x - generic ?y - generic)\n     :precondition (and (known ?x certain) (is_mappable ?x ?y) (not (not_mappable ?x ?y)) (not (mapped_to ?x ?y)) (not (new_item ?y)) (been_used ?y))\n     :effect (and\n        (known ?y certain)\n        (mapped_to ?x ?y)\n        (mapped ?x)\n        (not (been_used ?y))\n        (not (not_usable ?y))\n        (increase (total-cost ) (affinity ?x ?y)))\n    )\n\n\n    (:action map--free-alt\n     :parameters (?x - generic ?y - generic)\n     :precondition (and (known ?x certain) (is_mappable ?x ?y) (not (not_mappable ?x ?y)) (not (mapped_to ?x ?y)) (not (new_item ?y)) (been_used ?y) (free ?x))\n     :effect (and\n        (known ?y certain)\n        (mapped_to ?x ?y)\n        (mapped ?x)\n        (not (been_used ?y))\n        (not (not_usable ?y))\n        (free ?y)\n        (increase (total-cost ) 1000))\n    )\n\n)",
  "pddl_problem": "(define (problem default_name-problem)\n    (:domain default_name-domain)\n\n    (:objects\n        \n    )\n\n    (:init\n        (= (slot_goodness v__4) 200000.0)\n        (= (slot_goodness v__2) 100000.0)\n        (= (slot_goodness v__1) 200000.0)\n        (= (slot_goodness v__3) 100000.0)\n        (= (slot_goodness v__0) 100000.0)\n        (= (slot_goodness new_object_generic_0) 150000.0)\n        (= (affinity v__0 v__1) 20.0)\n        (= (affinity v__1 v__0) 20.0)\n        (= (affinity v__1 v__4) 20.0)\n        (= (affinity v__4 v__1) 20.0)\n        (= (affinity v__4 v__3) 20.0)\n        (= (affinity v__3 v__4) 20.0)\n        (= (affinity v__3 v__2) 20.0)\n        (= (affinity v__2 v__3) 20.0)\n        (= (total-cost ) 0.0)\n        (been_used v__2)\n        (been_used v__4)\n        (been_used v__0)\n        (connected a__0 try_level_0 try_level_1)\n        (connected a__1 try_level_0 try_level_1)\n        (connected a__3 try_level_0 try_level_1)\n        (connected a__2 try_level_0 try_level_1)\n        (new_item new_object_generic_0)\n        (not_slotfillable v__1)\n        (not_slotfillable v__4)\n        (not_mappable new_object_generic_0 v__1)\n        (not_mappable new_object_generic_0 v__4)\n        (mapped_to v__0 v__0)\n        (mapped_to new_object_generic_0 new_object_generic_0)\n        (mapped_to v__4 v__4)\n        (mapped_to v__1 v__1)\n        (mapped_to v__2 v__2)\n        (mapped_to v__3 v__3)\n        (is_mappable v__3 v__2)\n        (is_mappable v__4 v__1)\n        (is_mappable v__2 v__3)\n        (is_mappable v__0 v__1)\n        (is_mappable v__1 v__0)\n        (is_mappable v__4 v__3)\n        (is_mappable v__1 v__4)\n        (is_mappable v__3 v__4)\n    )\n\n    (:goal\n        (has_done a__3 present)\n    )\n\n    \n    \n    (:metric minimize (total-cost ))\n)\n\n",
  "list_of_plans": [
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__1",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__1",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__1",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__1",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__1",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__1",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__1",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__1",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__1",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__1",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    }
  ],
  "sample_hash": "ca72f4a393f39ecb77c8cf24e588ccdb",
  "agent_info_generator_input": {
    "num_agents": 4,
    "num_var": 5,
    "num_input_parameters": 2,
    "num_samples": 10,
    "num_goal_agents": 1,
    "proportion_coupled_agents": 0.75,
    "proportion_slot_fillable_variables": 0.5,
    "proportion_mappable_variables": 1.0,
    "num_var_types": 0,
    "slot_filler_option": null,
    "name_generator": "NUMBER",
    "error_message": null
  },
  "compiler_planner_lag_millisecond": 227.31591796875
}
{
  "description": "The system has Action a__0, Action a__1, Action a__2, Action a__3, and Action a__4.\nVariables v__0, v__1, v__3, and v__4 can be acquired by asking the user.\nVariables v__2 cannot be acquired by asking the user.\nThe system has Action ask. Action ask is less preferred than acquiring the value of a variable through other actions. Action ask lets the system ask the user about the value of any variable unless that variable is explicitly marked as cannot be acquired from the user.\nTo execute Action a__3, Variable v__1 and Variable v__0 should be known.\nAfter executing Action a__3, Variable v__4 and Variable v__3 are known.\nTo execute Action a__4, Variable v__1 and Variable v__0 should be known.\nAfter executing Action a__4, Variable v__3 and Variable v__4 are known.\nTo execute Action a__0, Variable v__1 and Variable v__0 should be known.\nAfter executing Action a__0, Variable v__3 and Variable v__2 are known.\nTo execute Action a__1, Variable v__1 and Variable v__2 should be known.\nAfter executing Action a__1, Variable v__3 and Variable v__4 are known.\nTo execute Action a__2, Variable v__1 and Variable v__0 should be known.\nAfter executing Action a__2, Variable v__3 and Variable v__4 are known.\nAction map is used when a value for one variable can be used for another variable. Action map maps variables with the same type.\nValues for Variable v__0 can be used for Variable v__3. Values for Variable v__3 can be used for Variable v__0. Values for Variable v__3 can be used for Variable v__2. Values for Variable v__2 can be used for Variable v__3. Values for Variable v__2 can be used for Variable v__4. Values for Variable v__4 can be used for Variable v__2. Values for Variable v__4 can be used for Variable v__1. Values for Variable v__1 can be used for Variable v__4.\nThe goal of the system is to execute Action a__2.",
  "pddl_domain": "(define (domain default_name-domain)\n    (:requirements :equality :action-costs :typing)\n    (:types\n        generic - object\n        operator - object\n        has-done-state - object\n        constraint-status - object\n        datum-state - object\n        num-retries - object\n        object\n    )\n\n    (:constants\n        False True - constraint-status\n        certain uncertain unknown - datum-state\n        new_object_generic_0 v__0 v__1 v__2 v__3 v__4 - generic\n        future past present - has-done-state\n        try_level_0 try_level_1 try_level_2 try_level_3 try_level_4 try_level_5 try_level_6 - num-retries\n        a__0 a__1 a__2 a__3 a__4 - operator\n    )\n\n    (:predicates\n        (has_done ?x1 - operator ?x2 - has-done-state)\n        (been_used ?x1 - generic)\n        (new_item ?x1 - generic)\n        (known ?x1 - generic ?x2 - datum-state)\n        (not_slotfillable ?x1 - generic)\n        (is_mappable ?x1 - generic ?x2 - generic)\n        (not_mappable ?x1 - generic ?x2 - generic)\n        (mapped ?x1 - generic)\n        (not_usable ?x1 - generic)\n        (mapped_to ?x1 - generic ?x2 - generic)\n        (connected ?x1 - operator ?x2 - num-retries ?x3 - num-retries)\n        (free ?x1 - generic)\n        (done_goal_pre )\n        (done_goal_post )\n        (has_done_a__3 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__4 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__0 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__1 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__2 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n    )\n\n    (:functions\n        (total-cost ) - number\n        (slot_goodness ?x1 - generic) - number\n        (affinity ?x1 - generic ?x2 - generic) - number\n    )\n\n    \n\n    \n    (:action enabler_operator__a__3\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__3 ?x0 ?x1 try_level_0)) (not (has_done_a__3 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__3 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__3\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__1) (known v__1 certain) (mapped_to ?x1 v__0) (known v__0 certain) (has_done_a__3 ?x0 ?x1 ?pre_level) (not (has_done_a__3 ?x0 ?x1 ?post_level)) (connected a__3 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__3 present)\n        (been_used ?x0)\n        (been_used v__1)\n        (been_used ?x1)\n        (been_used v__0)\n        (has_done_a__3 ?x0 ?x1 ?post_level)\n        (free v__4)\n        (known v__4 certain)\n        (free v__3)\n        (known v__3 certain)\n        (not (mapped v__4))\n        (not (mapped v__3))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__4\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__4 ?x0 ?x1 try_level_0)) (not (has_done_a__4 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__4 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__4\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__1) (known v__1 certain) (mapped_to ?x1 v__0) (known v__0 certain) (has_done_a__4 ?x0 ?x1 ?pre_level) (not (has_done_a__4 ?x0 ?x1 ?post_level)) (connected a__4 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__4 present)\n        (been_used ?x0)\n        (been_used v__1)\n        (been_used ?x1)\n        (been_used v__0)\n        (has_done_a__4 ?x0 ?x1 ?post_level)\n        (free v__3)\n        (known v__3 certain)\n        (free v__4)\n        (known v__4 certain)\n        (not (mapped v__3))\n        (not (mapped v__4))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__0\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__0 ?x0 ?x1 try_level_0)) (not (has_done_a__0 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__0 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__0\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__1) (known v__1 certain) (mapped_to ?x1 v__0) (known v__0 certain) (has_done_a__0 ?x0 ?x1 ?pre_level) (not (has_done_a__0 ?x0 ?x1 ?post_level)) (connected a__0 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__0 present)\n        (been_used ?x0)\n        (been_used v__1)\n        (been_used ?x1)\n        (been_used v__0)\n        (has_done_a__0 ?x0 ?x1 ?post_level)\n        (free v__3)\n        (known v__3 certain)\n        (free v__2)\n        (known v__2 certain)\n        (not (mapped v__3))\n        (not (mapped v__2))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__1\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__1 ?x0 ?x1 try_level_0)) (not (has_done_a__1 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__1 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__1\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__1) (known v__1 certain) (mapped_to ?x1 v__2) (known v__2 certain) (has_done_a__1 ?x0 ?x1 ?pre_level) (not (has_done_a__1 ?x0 ?x1 ?post_level)) (connected a__1 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__1 present)\n        (been_used ?x0)\n        (been_used v__1)\n        (been_used ?x1)\n        (been_used v__2)\n        (has_done_a__1 ?x0 ?x1 ?post_level)\n        (free v__3)\n        (known v__3 certain)\n        (free v__4)\n        (known v__4 certain)\n        (not (mapped v__3))\n        (not (mapped v__4))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__2\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__2 ?x0 ?x1 try_level_0)) (not (has_done_a__2 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__2 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__2\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__1) (known v__1 certain) (mapped_to ?x1 v__0) (known v__0 certain) (has_done_a__2 ?x0 ?x1 ?pre_level) (not (has_done_a__2 ?x0 ?x1 ?post_level)) (connected a__2 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__2 present)\n        (been_used ?x0)\n        (been_used v__1)\n        (been_used ?x1)\n        (been_used v__0)\n        (has_done_a__2 ?x0 ?x1 ?post_level)\n        (free v__3)\n        (known v__3 certain)\n        (free v__4)\n        (known v__4 certain)\n        (not (mapped v__3))\n        (not (mapped v__4))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action ask\n     :parameters (?x - generic)\n     :precondition (and (not (known ?x certain)) (not (not_slotfillable ?x)))\n     :effect (and\n        (free ?x)\n        (mapped_to ?x ?x)\n        (known ?x certain)\n        (not (not_usable ?x))\n        (not (mapped ?x))\n        (increase (total-cost ) (slot_goodness ?x)))\n    )\n\n\n    (:action map\n     :parameters (?x - generic ?y - generic)\n     :precondition (and (known ?x certain) (is_mappable ?x ?y) (not (not_mappable ?x ?y)) (not (mapped_to ?x ?y)) (not (new_item ?y)) (been_used ?y))\n     :effect (and\n        (known ?y certain)\n        (mapped_to ?x ?y)\n        (mapped ?x)\n        (not (been_used ?y))\n        (not (not_usable ?y))\n        (increase (total-cost ) (affinity ?x ?y)))\n    )\n\n\n    (:action map--free-alt\n     :parameters (?x - generic ?y - generic)\n     :precondition (and (known ?x certain) (is_mappable ?x ?y) (not (not_mappable ?x ?y)) (not (mapped_to ?x ?y)) (not (new_item ?y)) (been_used ?y) (free ?x))\n     :effect (and\n        (known ?y certain)\n        (mapped_to ?x ?y)\n        (mapped ?x)\n        (not (been_used ?y))\n        (not (not_usable ?y))\n        (free ?y)\n        (increase (total-cost ) 1000))\n    )\n\n)",
  "pddl_problem": "(define (problem default_name-problem)\n    (:domain default_name-domain)\n\n    (:objects\n        \n    )\n\n    (:init\n        (= (slot_goodness v__1) 100000.0)\n        (= (slot_goodness v__0) 100000.0)\n        (= (slot_goodness v__4) 100000.0)\n        (= (slot_goodness v__3) 100000.0)\n        (= (slot_goodness v__2) 200000.0)\n        (= (slot_goodness new_object_generic_0) 150000.0)\n        (= (affinity v__0 v__3) 20.0)\n        (= (affinity v__3 v__0) 20.0)\n        (= (affinity v__3 v__2) 20.0)\n        (= (affinity v__2 v__3) 20.0)\n        (= (affinity v__2 v__4) 20.0)\n        (= (affinity v__4 v__2) 20.0)\n        (= (affinity v__4 v__1) 20.0)\n        (= (affinity v__1 v__4) 20.0)\n        (= (total-cost ) 0.0)\n        (been_used v__1)\n        (been_used v__2)\n        (been_used v__0)\n        (connected a__2 try_level_0 try_level_1)\n        (connected a__4 try_level_0 try_level_1)\n        (connected a__3 try_level_0 try_level_1)\n        (connected a__1 try_level_0 try_level_1)\n        (connected a__0 try_level_0 try_level_1)\n        (new_item new_object_generic_0)\n        (not_slotfillable v__2)\n        (not_mappable new_object_generic_0 v__2)\n        (mapped_to v__0 v__0)\n        (mapped_to new_object_generic_0 new_object_generic_0)\n        (mapped_to v__4 v__4)\n        (mapped_to v__1 v__1)\n        (mapped_to v__2 v__2)\n        (mapped_to v__3 v__3)\n        (is_mappable v__3 v__2)\n        (is_mappable v__2 v__4)\n        (is_mappable v__2 v__3)\n        (is_mappable v__4 v__1)\n        (is_mappable v__3 v__0)\n        (is_mappable v__1 v__4)\n        (is_mappable v__0 v__3)\n        (is_mappable v__4 v__2)\n    )\n\n    (:goal\n        (has_done a__2 present)\n    )\n\n    \n    \n    (:metric minimize (total-cost ))\n)\n\n",
  "list_of_plans": [
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    }
  ],
  "sample_hash": "09f9d41f700cdf87649f82f46fac6426",
  "agent_info_generator_input": {
    "num_agents": 5,
    "num_var": 5,
    "num_input_parameters": 2,
    "num_samples": 10,
    "num_goal_agents": 1,
    "proportion_coupled_agents": 0.25,
    "proportion_slot_fillable_variables": 0.75,
    "proportion_mappable_variables": 1.0,
    "num_var_types": 0,
    "slot_filler_option": null,
    "name_generator": "NUMBER",
    "error_message": null
  },
  "compiler_planner_lag_millisecond": 230.17626953125
}
{
  "description": "The system has Action a__0, Action a__1, Action a__2, and Action a__3.\nVariables v__0 and v__2 can be acquired by asking the user.\nVariables v__1, v__3, and v__4 cannot be acquired by asking the user.\nThe system has Action ask. Action ask is less preferred than acquiring the value of a variable through other actions. Action ask lets the system ask the user about the value of any variable unless that variable is explicitly marked as cannot be acquired from the user.\nTo execute Action a__0, Variable v__2 and Variable v__0 should be known.\nAfter executing Action a__0, Variable v__3 and Variable v__4 are known.\nTo execute Action a__3, Variable v__2 and Variable v__0 should be known.\nAfter executing Action a__3, Variable v__1 and Variable v__3 are known.\nTo execute Action a__2, Variable v__2 and Variable v__4 should be known.\nAfter executing Action a__2, Variable v__1 and Variable v__3 are known.\nTo execute Action a__1, Variable v__2 and Variable v__4 should be known.\nAfter executing Action a__1, Variable v__3 and Variable v__1 are known.\nAction map is used when a value for one variable can be used for another variable. Action map maps variables with the same type.\nThe goal of the system is to execute Action a__2.",
  "pddl_domain": "(define (domain default_name-domain)\n    (:requirements :equality :typing :action-costs)\n    (:types\n        generic - object\n        operator - object\n        has-done-state - object\n        constraint-status - object\n        datum-state - object\n        num-retries - object\n        object\n    )\n\n    (:constants\n        False True - constraint-status\n        certain uncertain unknown - datum-state\n        new_object_generic_0 v__0 v__1 v__2 v__3 v__4 - generic\n        future past present - has-done-state\n        try_level_0 try_level_1 try_level_2 try_level_3 try_level_4 try_level_5 try_level_6 - num-retries\n        a__0 a__1 a__2 a__3 - operator\n    )\n\n    (:predicates\n        (has_done ?x1 - operator ?x2 - has-done-state)\n        (been_used ?x1 - generic)\n        (new_item ?x1 - generic)\n        (known ?x1 - generic ?x2 - datum-state)\n        (not_slotfillable ?x1 - generic)\n        (is_mappable ?x1 - generic ?x2 - generic)\n        (not_mappable ?x1 - generic ?x2 - generic)\n        (mapped ?x1 - generic)\n        (not_usable ?x1 - generic)\n        (mapped_to ?x1 - generic ?x2 - generic)\n        (connected ?x1 - operator ?x2 - num-retries ?x3 - num-retries)\n        (free ?x1 - generic)\n        (done_goal_pre )\n        (done_goal_post )\n        (has_done_a__0 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__3 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__2 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__1 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n    )\n\n    (:functions\n        (total-cost ) - number\n        (slot_goodness ?x1 - generic) - number\n        (affinity ?x1 - generic ?x2 - generic) - number\n    )\n\n    \n\n    \n    (:action enabler_operator__a__0\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__0 ?x0 ?x1 try_level_0)) (not (has_done_a__0 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__0 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__0\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__2) (known v__2 certain) (mapped_to ?x1 v__0) (known v__0 certain) (has_done_a__0 ?x0 ?x1 ?pre_level) (not (has_done_a__0 ?x0 ?x1 ?post_level)) (connected a__0 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__0 present)\n        (been_used ?x0)\n        (been_used v__2)\n        (been_used ?x1)\n        (been_used v__0)\n        (has_done_a__0 ?x0 ?x1 ?post_level)\n        (free v__3)\n        (known v__3 certain)\n        (free v__4)\n        (known v__4 certain)\n        (not (mapped v__3))\n        (not (mapped v__4))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__3\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__3 ?x0 ?x1 try_level_0)) (not (has_done_a__3 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__3 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__3\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__2) (known v__2 certain) (mapped_to ?x1 v__0) (known v__0 certain) (has_done_a__3 ?x0 ?x1 ?pre_level) (not (has_done_a__3 ?x0 ?x1 ?post_level)) (connected a__3 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__3 present)\n        (been_used ?x0)\n        (been_used v__2)\n        (been_used ?x1)\n        (been_used v__0)\n        (has_done_a__3 ?x0 ?x1 ?post_level)\n        (free v__1)\n        (known v__1 certain)\n        (free v__3)\n        (known v__3 certain)\n        (not (mapped v__1))\n        (not (mapped v__3))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__2\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__2 ?x0 ?x1 try_level_0)) (not (has_done_a__2 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__2 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__2\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__2) (known v__2 certain) (mapped_to ?x1 v__4) (known v__4 certain) (has_done_a__2 ?x0 ?x1 ?pre_level) (not (has_done_a__2 ?x0 ?x1 ?post_level)) (connected a__2 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__2 present)\n        (been_used ?x0)\n        (been_used v__2)\n        (been_used ?x1)\n        (been_used v__4)\n        (has_done_a__2 ?x0 ?x1 ?post_level)\n        (free v__1)\n        (known v__1 certain)\n        (free v__3)\n        (known v__3 certain)\n        (not (mapped v__1))\n        (not (mapped v__3))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__1\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__1 ?x0 ?x1 try_level_0)) (not (has_done_a__1 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__1 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__1\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__2) (known v__2 certain) (mapped_to ?x1 v__4) (known v__4 certain) (has_done_a__1 ?x0 ?x1 ?pre_level) (not (has_done_a__1 ?x0 ?x1 ?post_level)) (connected a__1 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__1 present)\n        (been_used ?x0)\n        (been_used v__2)\n        (been_used ?x1)\n        (been_used v__4)\n        (has_done_a__1 ?x0 ?x1 ?post_level)\n        (free v__3)\n        (known v__3 certain)\n        (free v__1)\n        (known v__1 certain)\n        (not (mapped v__3))\n        (not (mapped v__1))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action ask\n     :parameters (?x - generic)\n     :precondition (and (not (known ?x certain)) (not (not_slotfillable ?x)))\n     :effect (and\n        (free ?x)\n        (mapped_to ?x ?x)\n        (known ?x certain)\n        (not (not_usable ?x))\n        (not (mapped ?x))\n        (increase (total-cost ) (slot_goodness ?x)))\n    )\n\n\n    (:action map\n     :parameters (?x - generic ?y - generic)\n     :precondition (and (known ?x certain) (is_mappable ?x ?y) (not (not_mappable ?x ?y)) (not (mapped_to ?x ?y)) (not (new_item ?y)) (been_used ?y))\n     :effect (and\n        (known ?y certain)\n        (mapped_to ?x ?y)\n        (mapped ?x)\n        (not (been_used ?y))\n        (not (not_usable ?y))\n        (increase (total-cost ) (affinity ?x ?y)))\n    )\n\n\n    (:action map--free-alt\n     :parameters (?x - generic ?y - generic)\n     :precondition (and (known ?x certain) (is_mappable ?x ?y) (not (not_mappable ?x ?y)) (not (mapped_to ?x ?y)) (not (new_item ?y)) (been_used ?y) (free ?x))\n     :effect (and\n        (known ?y certain)\n        (mapped_to ?x ?y)\n        (mapped ?x)\n        (not (been_used ?y))\n        (not (not_usable ?y))\n        (free ?y)\n        (increase (total-cost ) 1000))\n    )\n\n)",
  "pddl_problem": "(define (problem default_name-problem)\n    (:domain default_name-domain)\n\n    (:objects\n        \n    )\n\n    (:init\n        (= (slot_goodness v__2) 100000.0)\n        (= (slot_goodness v__0) 100000.0)\n        (= (slot_goodness v__3) 200000.0)\n        (= (slot_goodness v__4) 200000.0)\n        (= (slot_goodness v__1) 200000.0)\n        (= (slot_goodness new_object_generic_0) 150000.0)\n        (= (total-cost ) 0.0)\n        (been_used v__2)\n        (been_used v__0)\n        (been_used v__4)\n        (connected a__1 try_level_0 try_level_1)\n        (connected a__0 try_level_0 try_level_1)\n        (connected a__3 try_level_0 try_level_1)\n        (connected a__2 try_level_0 try_level_1)\n        (new_item new_object_generic_0)\n        (not_slotfillable v__1)\n        (not_slotfillable v__3)\n        (not_slotfillable v__4)\n        (not_mappable new_object_generic_0 v__4)\n        (not_mappable new_object_generic_0 v__1)\n        (not_mappable new_object_generic_0 v__3)\n        (mapped_to v__2 v__2)\n        (mapped_to v__1 v__1)\n        (mapped_to v__3 v__3)\n        (mapped_to v__0 v__0)\n        (mapped_to new_object_generic_0 new_object_generic_0)\n        (mapped_to v__4 v__4)\n    )\n\n    (:goal\n        (has_done a__2 present)\n    )\n\n    \n    \n    (:metric minimize (total-cost ))\n)\n\n",
  "list_of_plans": [],
  "sample_hash": "907ea3bd3088a26cee5e610b9ea5bd88",
  "agent_info_generator_input": {
    "num_agents": 4,
    "num_var": 5,
    "num_input_parameters": 2,
    "num_samples": 30,
    "num_goal_agents": 1,
    "proportion_coupled_agents": 0.75,
    "proportion_slot_fillable_variables": 0.25,
    "proportion_mappable_variables": 0.0,
    "num_var_types": 0,
    "slot_filler_option": null,
    "name_generator": "NUMBER",
    "error_message": null
  },
  "compiler_planner_lag_millisecond": 207.80908203125
}
{
  "description": "The system has Action a__0, Action a__1, Action a__2, and Action a__3.\nVariables v__0, v__1, v__3, and v__4 can be acquired by asking the user.\nVariables v__2 cannot be acquired by asking the user.\nThe system has Action ask. Action ask is less preferred than acquiring the value of a variable through other actions. Action ask lets the system ask the user about the value of any variable unless that variable is explicitly marked as cannot be acquired from the user.\nTo execute Action a__2, Variable v__1 and Variable v__2 should be known.\nAfter executing Action a__2, Variable v__4 and Variable v__3 are known.\nTo execute Action a__1, Variable v__1 and Variable v__2 should be known.\nAfter executing Action a__1, Variable v__2 and Variable v__4 are known.\nTo execute Action a__3, Variable v__1 and Variable v__2 should be known.\nAfter executing Action a__3, Variable v__3 and Variable v__4 are known.\nTo execute Action a__0, Variable v__1 and Variable v__0 should be known.\nAfter executing Action a__0, Variable v__2 and Variable v__4 are known.\nAction map is used when a value for one variable can be used for another variable. Action map maps variables with the same type.\nThe goal of the system is to execute Action a__0.",
  "pddl_domain": "(define (domain default_name-domain)\n    (:requirements :equality :typing :action-costs)\n    (:types\n        generic - object\n        operator - object\n        has-done-state - object\n        constraint-status - object\n        datum-state - object\n        num-retries - object\n        object\n    )\n\n    (:constants\n        False True - constraint-status\n        certain uncertain unknown - datum-state\n        new_object_generic_0 v__0 v__1 v__2 v__3 v__4 - generic\n        future past present - has-done-state\n        try_level_0 try_level_1 try_level_2 try_level_3 try_level_4 try_level_5 try_level_6 - num-retries\n        a__0 a__1 a__2 a__3 - operator\n    )\n\n    (:predicates\n        (has_done ?x1 - operator ?x2 - has-done-state)\n        (been_used ?x1 - generic)\n        (new_item ?x1 - generic)\n        (known ?x1 - generic ?x2 - datum-state)\n        (not_slotfillable ?x1 - generic)\n        (is_mappable ?x1 - generic ?x2 - generic)\n        (not_mappable ?x1 - generic ?x2 - generic)\n        (mapped ?x1 - generic)\n        (not_usable ?x1 - generic)\n        (mapped_to ?x1 - generic ?x2 - generic)\n        (connected ?x1 - operator ?x2 - num-retries ?x3 - num-retries)\n        (free ?x1 - generic)\n        (done_goal_pre )\n        (done_goal_post )\n        (has_done_a__2 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__1 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__3 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__0 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n    )\n\n    (:functions\n        (total-cost ) - number\n        (slot_goodness ?x1 - generic) - number\n        (affinity ?x1 - generic ?x2 - generic) - number\n    )\n\n    \n\n    \n    (:action enabler_operator__a__2\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__2 ?x0 ?x1 try_level_0)) (not (has_done_a__2 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__2 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__2\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__1) (known v__1 certain) (mapped_to ?x1 v__2) (known v__2 certain) (has_done_a__2 ?x0 ?x1 ?pre_level) (not (has_done_a__2 ?x0 ?x1 ?post_level)) (connected a__2 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__2 present)\n        (been_used ?x0)\n        (been_used v__1)\n        (been_used ?x1)\n        (been_used v__2)\n        (has_done_a__2 ?x0 ?x1 ?post_level)\n        (free v__4)\n        (known v__4 certain)\n        (free v__3)\n        (known v__3 certain)\n        (not (mapped v__4))\n        (not (mapped v__3))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__1\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__1 ?x0 ?x1 try_level_0)) (not (has_done_a__1 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__1 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__1\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__1) (known v__1 certain) (mapped_to ?x1 v__2) (known v__2 certain) (has_done_a__1 ?x0 ?x1 ?pre_level) (not (has_done_a__1 ?x0 ?x1 ?post_level)) (connected a__1 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__1 present)\n        (been_used ?x0)\n        (been_used v__1)\n        (been_used ?x1)\n        (been_used v__2)\n        (has_done_a__1 ?x0 ?x1 ?post_level)\n        (free v__2)\n        (known v__2 certain)\n        (free v__4)\n        (known v__4 certain)\n        (not (mapped v__2))\n        (not (mapped v__4))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__3\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__3 ?x0 ?x1 try_level_0)) (not (has_done_a__3 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__3 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__3\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__1) (known v__1 certain) (mapped_to ?x1 v__2) (known v__2 certain) (has_done_a__3 ?x0 ?x1 ?pre_level) (not (has_done_a__3 ?x0 ?x1 ?post_level)) (connected a__3 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__3 present)\n        (been_used ?x0)\n        (been_used v__1)\n        (been_used ?x1)\n        (been_used v__2)\n        (has_done_a__3 ?x0 ?x1 ?post_level)\n        (free v__3)\n        (known v__3 certain)\n        (free v__4)\n        (known v__4 certain)\n        (not (mapped v__3))\n        (not (mapped v__4))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__0\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__0 ?x0 ?x1 try_level_0)) (not (has_done_a__0 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__0 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__0\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__1) (known v__1 certain) (mapped_to ?x1 v__0) (known v__0 certain) (has_done_a__0 ?x0 ?x1 ?pre_level) (not (has_done_a__0 ?x0 ?x1 ?post_level)) (connected a__0 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__0 present)\n        (been_used ?x0)\n        (been_used v__1)\n        (been_used ?x1)\n        (been_used v__0)\n        (has_done_a__0 ?x0 ?x1 ?post_level)\n        (free v__2)\n        (known v__2 certain)\n        (free v__4)\n        (known v__4 certain)\n        (not (mapped v__2))\n        (not (mapped v__4))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action ask\n     :parameters (?x - generic)\n     :precondition (and (not (known ?x certain)) (not (not_slotfillable ?x)))\n     :effect (and\n        (free ?x)\n        (mapped_to ?x ?x)\n        (known ?x certain)\n        (not (not_usable ?x))\n        (not (mapped ?x))\n        (increase (total-cost ) (slot_goodness ?x)))\n    )\n\n\n    (:action map\n     :parameters (?x - generic ?y - generic)\n     :precondition (and (known ?x certain) (is_mappable ?x ?y) (not (not_mappable ?x ?y)) (not (mapped_to ?x ?y)) (not (new_item ?y)) (been_used ?y))\n     :effect (and\n        (known ?y certain)\n        (mapped_to ?x ?y)\n        (mapped ?x)\n        (not (been_used ?y))\n        (not (not_usable ?y))\n        (increase (total-cost ) (affinity ?x ?y)))\n    )\n\n\n    (:action map--free-alt\n     :parameters (?x - generic ?y - generic)\n     :precondition (and (known ?x certain) (is_mappable ?x ?y) (not (not_mappable ?x ?y)) (not (mapped_to ?x ?y)) (not (new_item ?y)) (been_used ?y) (free ?x))\n     :effect (and\n        (known ?y certain)\n        (mapped_to ?x ?y)\n        (mapped ?x)\n        (not (been_used ?y))\n        (not (not_usable ?y))\n        (free ?y)\n        (increase (total-cost ) 1000))\n    )\n\n)",
  "pddl_problem": "(define (problem default_name-problem)\n    (:domain default_name-domain)\n\n    (:objects\n        \n    )\n\n    (:init\n        (= (slot_goodness v__1) 100000.0)\n        (= (slot_goodness v__2) 200000.0)\n        (= (slot_goodness v__4) 100000.0)\n        (= (slot_goodness v__3) 100000.0)\n        (= (slot_goodness v__0) 100000.0)\n        (= (slot_goodness new_object_generic_0) 150000.0)\n        (= (total-cost ) 0.0)\n        (been_used v__1)\n        (been_used v__2)\n        (been_used v__0)\n        (connected a__1 try_level_0 try_level_1)\n        (connected a__0 try_level_0 try_level_1)\n        (connected a__3 try_level_0 try_level_1)\n        (connected a__2 try_level_0 try_level_1)\n        (new_item new_object_generic_0)\n        (not_slotfillable v__2)\n        (not_mappable new_object_generic_0 v__2)\n        (mapped_to v__2 v__2)\n        (mapped_to v__1 v__1)\n        (mapped_to v__3 v__3)\n        (mapped_to v__0 v__0)\n        (mapped_to new_object_generic_0 new_object_generic_0)\n        (mapped_to v__4 v__4)\n    )\n\n    (:goal\n        (has_done a__0 present)\n    )\n\n    \n    \n    (:metric minimize (total-cost ))\n)\n\n",
  "list_of_plans": [],
  "sample_hash": "717301b1b6db2bbb33029255cba1382b",
  "agent_info_generator_input": {
    "num_agents": 4,
    "num_var": 5,
    "num_input_parameters": 2,
    "num_samples": 30,
    "num_goal_agents": 1,
    "proportion_coupled_agents": 1.0,
    "proportion_slot_fillable_variables": 0.75,
    "proportion_mappable_variables": 0.0,
    "num_var_types": 0,
    "slot_filler_option": null,
    "name_generator": "NUMBER",
    "error_message": null
  },
  "compiler_planner_lag_millisecond": 200.93505859375
}
{
  "description": "The system has Action a__0, Action a__1, Action a__2, Action a__3, and Action a__4.\nVariables v__1, v__2, and v__4 can be acquired by asking the user.\nVariables v__0 and v__3 cannot be acquired by asking the user.\nThe system has Action ask. Action ask is less preferred than acquiring the value of a variable through other actions. Action ask lets the system ask the user about the value of any variable unless that variable is explicitly marked as cannot be acquired from the user.\nTo execute Action a__2, Variable v__2 and Variable v__1 should be known.\nAfter executing Action a__2, Variable v__4 and Variable v__0 are known.\nTo execute Action a__0, Variable v__1 and Variable v__2 should be known.\nAfter executing Action a__0, Variable v__4 and Variable v__3 are known.\nTo execute Action a__1, Variable v__3 and Variable v__2 should be known.\nAfter executing Action a__1, Variable v__4 and Variable v__0 are known.\nTo execute Action a__4, Variable v__2 and Variable v__1 should be known.\nAfter executing Action a__4, Variable v__4 and Variable v__0 are known.\nTo execute Action a__3, Variable v__1 and Variable v__2 should be known.\nAfter executing Action a__3, Variable v__0 and Variable v__4 are known.\nAction map is used when a value for one variable can be used for another variable. Action map maps variables with the same type.\nValues for Variable v__1 can be used for Variable v__0. Values for Variable v__0 can be used for Variable v__1. Values for Variable v__0 can be used for Variable v__2. Values for Variable v__2 can be used for Variable v__0. Values for Variable v__2 can be used for Variable v__4. Values for Variable v__4 can be used for Variable v__2. Values for Variable v__4 can be used for Variable v__3. Values for Variable v__3 can be used for Variable v__4.\nThe goal of the system is to execute Action a__3.",
  "pddl_domain": "(define (domain default_name-domain)\n    (:requirements :equality :action-costs :typing)\n    (:types\n        generic - object\n        operator - object\n        has-done-state - object\n        constraint-status - object\n        datum-state - object\n        num-retries - object\n        object\n    )\n\n    (:constants\n        False True - constraint-status\n        certain uncertain unknown - datum-state\n        new_object_generic_0 v__0 v__1 v__2 v__3 v__4 - generic\n        future past present - has-done-state\n        try_level_0 try_level_1 try_level_2 try_level_3 try_level_4 try_level_5 try_level_6 - num-retries\n        a__0 a__1 a__2 a__3 a__4 - operator\n    )\n\n    (:predicates\n        (has_done ?x1 - operator ?x2 - has-done-state)\n        (been_used ?x1 - generic)\n        (new_item ?x1 - generic)\n        (known ?x1 - generic ?x2 - datum-state)\n        (not_slotfillable ?x1 - generic)\n        (is_mappable ?x1 - generic ?x2 - generic)\n        (not_mappable ?x1 - generic ?x2 - generic)\n        (mapped ?x1 - generic)\n        (not_usable ?x1 - generic)\n        (mapped_to ?x1 - generic ?x2 - generic)\n        (connected ?x1 - operator ?x2 - num-retries ?x3 - num-retries)\n        (free ?x1 - generic)\n        (done_goal_pre )\n        (done_goal_post )\n        (has_done_a__2 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__0 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__1 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__4 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__3 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n    )\n\n    (:functions\n        (total-cost ) - number\n        (slot_goodness ?x1 - generic) - number\n        (affinity ?x1 - generic ?x2 - generic) - number\n    )\n\n    \n\n    \n    (:action enabler_operator__a__2\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__2 ?x0 ?x1 try_level_0)) (not (has_done_a__2 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__2 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__2\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__2) (known v__2 certain) (mapped_to ?x1 v__1) (known v__1 certain) (has_done_a__2 ?x0 ?x1 ?pre_level) (not (has_done_a__2 ?x0 ?x1 ?post_level)) (connected a__2 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__2 present)\n        (been_used ?x0)\n        (been_used v__2)\n        (been_used ?x1)\n        (been_used v__1)\n        (has_done_a__2 ?x0 ?x1 ?post_level)\n        (free v__4)\n        (known v__4 certain)\n        (free v__0)\n        (known v__0 certain)\n        (not (mapped v__4))\n        (not (mapped v__0))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__0\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__0 ?x0 ?x1 try_level_0)) (not (has_done_a__0 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__0 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__0\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__1) (known v__1 certain) (mapped_to ?x1 v__2) (known v__2 certain) (has_done_a__0 ?x0 ?x1 ?pre_level) (not (has_done_a__0 ?x0 ?x1 ?post_level)) (connected a__0 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__0 present)\n        (been_used ?x0)\n        (been_used v__1)\n        (been_used ?x1)\n        (been_used v__2)\n        (has_done_a__0 ?x0 ?x1 ?post_level)\n        (free v__4)\n        (known v__4 certain)\n        (free v__3)\n        (known v__3 certain)\n        (not (mapped v__4))\n        (not (mapped v__3))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__1\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__1 ?x0 ?x1 try_level_0)) (not (has_done_a__1 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__1 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__1\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__3) (known v__3 certain) (mapped_to ?x1 v__2) (known v__2 certain) (has_done_a__1 ?x0 ?x1 ?pre_level) (not (has_done_a__1 ?x0 ?x1 ?post_level)) (connected a__1 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__1 present)\n        (been_used ?x0)\n        (been_used v__3)\n        (been_used ?x1)\n        (been_used v__2)\n        (has_done_a__1 ?x0 ?x1 ?post_level)\n        (free v__4)\n        (known v__4 certain)\n        (free v__0)\n        (known v__0 certain)\n        (not (mapped v__4))\n        (not (mapped v__0))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__4\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__4 ?x0 ?x1 try_level_0)) (not (has_done_a__4 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__4 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__4\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__2) (known v__2 certain) (mapped_to ?x1 v__1) (known v__1 certain) (has_done_a__4 ?x0 ?x1 ?pre_level) (not (has_done_a__4 ?x0 ?x1 ?post_level)) (connected a__4 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__4 present)\n        (been_used ?x0)\n        (been_used v__2)\n        (been_used ?x1)\n        (been_used v__1)\n        (has_done_a__4 ?x0 ?x1 ?post_level)\n        (free v__4)\n        (known v__4 certain)\n        (free v__0)\n        (known v__0 certain)\n        (not (mapped v__4))\n        (not (mapped v__0))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__3\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__3 ?x0 ?x1 try_level_0)) (not (has_done_a__3 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__3 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__3\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__1) (known v__1 certain) (mapped_to ?x1 v__2) (known v__2 certain) (has_done_a__3 ?x0 ?x1 ?pre_level) (not (has_done_a__3 ?x0 ?x1 ?post_level)) (connected a__3 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__3 present)\n        (been_used ?x0)\n        (been_used v__1)\n        (been_used ?x1)\n        (been_used v__2)\n        (has_done_a__3 ?x0 ?x1 ?post_level)\n        (free v__0)\n        (known v__0 certain)\n        (free v__4)\n        (known v__4 certain)\n        (not (mapped v__0))\n        (not (mapped v__4))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action ask\n     :parameters (?x - generic)\n     :precondition (and (not (known ?x certain)) (not (not_slotfillable ?x)))\n     :effect (and\n        (free ?x)\n        (mapped_to ?x ?x)\n        (known ?x certain)\n        (not (not_usable ?x))\n        (not (mapped ?x))\n        (increase (total-cost ) (slot_goodness ?x)))\n    )\n\n\n    (:action map\n     :parameters (?x - generic ?y - generic)\n     :precondition (and (known ?x certain) (is_mappable ?x ?y) (not (not_mappable ?x ?y)) (not (mapped_to ?x ?y)) (not (new_item ?y)) (been_used ?y))\n     :effect (and\n        (known ?y certain)\n        (mapped_to ?x ?y)\n        (mapped ?x)\n        (not (been_used ?y))\n        (not (not_usable ?y))\n        (increase (total-cost ) (affinity ?x ?y)))\n    )\n\n\n    (:action map--free-alt\n     :parameters (?x - generic ?y - generic)\n     :precondition (and (known ?x certain) (is_mappable ?x ?y) (not (not_mappable ?x ?y)) (not (mapped_to ?x ?y)) (not (new_item ?y)) (been_used ?y) (free ?x))\n     :effect (and\n        (known ?y certain)\n        (mapped_to ?x ?y)\n        (mapped ?x)\n        (not (been_used ?y))\n        (not (not_usable ?y))\n        (free ?y)\n        (increase (total-cost ) 1000))\n    )\n\n)",
  "pddl_problem": "(define (problem default_name-problem)\n    (:domain default_name-domain)\n\n    (:objects\n        \n    )\n\n    (:init\n        (= (slot_goodness v__2) 100000.0)\n        (= (slot_goodness v__1) 100000.0)\n        (= (slot_goodness v__4) 100000.0)\n        (= (slot_goodness v__0) 200000.0)\n        (= (slot_goodness v__3) 200000.0)\n        (= (slot_goodness new_object_generic_0) 150000.0)\n        (= (affinity v__1 v__0) 20.0)\n        (= (affinity v__0 v__1) 20.0)\n        (= (affinity v__0 v__2) 20.0)\n        (= (affinity v__2 v__0) 20.0)\n        (= (affinity v__2 v__4) 20.0)\n        (= (affinity v__4 v__2) 20.0)\n        (= (affinity v__4 v__3) 20.0)\n        (= (affinity v__3 v__4) 20.0)\n        (= (total-cost ) 0.0)\n        (been_used v__1)\n        (been_used v__2)\n        (been_used v__3)\n        (connected a__2 try_level_0 try_level_1)\n        (connected a__4 try_level_0 try_level_1)\n        (connected a__3 try_level_0 try_level_1)\n        (connected a__1 try_level_0 try_level_1)\n        (connected a__0 try_level_0 try_level_1)\n        (new_item new_object_generic_0)\n        (not_slotfillable v__3)\n        (not_slotfillable v__0)\n        (not_mappable new_object_generic_0 v__0)\n        (not_mappable new_object_generic_0 v__3)\n        (mapped_to v__0 v__0)\n        (mapped_to new_object_generic_0 new_object_generic_0)\n        (mapped_to v__4 v__4)\n        (mapped_to v__1 v__1)\n        (mapped_to v__2 v__2)\n        (mapped_to v__3 v__3)\n        (is_mappable v__0 v__2)\n        (is_mappable v__2 v__4)\n        (is_mappable v__0 v__1)\n        (is_mappable v__1 v__0)\n        (is_mappable v__4 v__3)\n        (is_mappable v__3 v__4)\n        (is_mappable v__4 v__2)\n        (is_mappable v__2 v__0)\n    )\n\n    (:goal\n        (has_done a__3 present)\n    )\n\n    \n    \n    (:metric minimize (total-cost ))\n)\n\n",
  "list_of_plans": [
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__0",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__0",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__0",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__0",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__0",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__0",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__0",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__0",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__0",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__0",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    }
  ],
  "sample_hash": "abcea8b2d3130b82e75f7fdafcef29ca",
  "agent_info_generator_input": {
    "num_agents": 5,
    "num_var": 5,
    "num_input_parameters": 2,
    "num_samples": 10,
    "num_goal_agents": 1,
    "proportion_coupled_agents": 0.25,
    "proportion_slot_fillable_variables": 0.5,
    "proportion_mappable_variables": 1.0,
    "num_var_types": 0,
    "slot_filler_option": null,
    "name_generator": "NUMBER",
    "error_message": null
  },
  "compiler_planner_lag_millisecond": 248.805908203125
}
{
  "description": "The system has Action a__0, Action a__1, Action a__2, and Action a__3.\nVariables v__0, v__1, v__3, and v__4 can be acquired by asking the user.\nVariables v__2 cannot be acquired by asking the user.\nThe system has Action ask. Action ask is less preferred than acquiring the value of a variable through other actions. Action ask lets the system ask the user about the value of any variable unless that variable is explicitly marked as cannot be acquired from the user.\nTo execute Action a__3, Variable v__1 and Variable v__0 should be known.\nAfter executing Action a__3, Variable v__4 and Variable v__3 are known.\nTo execute Action a__2, Variable v__1 and Variable v__0 should be known.\nAfter executing Action a__2, Variable v__3 and Variable v__4 are known.\nTo execute Action a__1, Variable v__1 and Variable v__2 should be known.\nAfter executing Action a__1, Variable v__4 and Variable v__3 are known.\nTo execute Action a__0, Variable v__1 and Variable v__0 should be known.\nAfter executing Action a__0, Variable v__3 and Variable v__2 are known.\nAction map is used when a value for one variable can be used for another variable. Action map maps variables with the same type.\nValues for Variable v__0 can be used for Variable v__4. Values for Variable v__4 can be used for Variable v__0. Values for Variable v__4 can be used for Variable v__2. Values for Variable v__2 can be used for Variable v__4. Values for Variable v__2 can be used for Variable v__3. Values for Variable v__3 can be used for Variable v__2. Values for Variable v__3 can be used for Variable v__1. Values for Variable v__1 can be used for Variable v__3.\nThe goal of the system is to execute Action a__2.",
  "pddl_domain": "(define (domain default_name-domain)\n    (:requirements :action-costs :typing :equality)\n    (:types\n        generic - object\n        operator - object\n        has-done-state - object\n        constraint-status - object\n        datum-state - object\n        num-retries - object\n        object\n    )\n\n    (:constants\n        False True - constraint-status\n        certain uncertain unknown - datum-state\n        new_object_generic_0 v__0 v__1 v__2 v__3 v__4 - generic\n        future past present - has-done-state\n        try_level_0 try_level_1 try_level_2 try_level_3 try_level_4 try_level_5 try_level_6 - num-retries\n        a__0 a__1 a__2 a__3 - operator\n    )\n\n    (:predicates\n        (has_done ?x1 - operator ?x2 - has-done-state)\n        (been_used ?x1 - generic)\n        (new_item ?x1 - generic)\n        (known ?x1 - generic ?x2 - datum-state)\n        (not_slotfillable ?x1 - generic)\n        (is_mappable ?x1 - generic ?x2 - generic)\n        (not_mappable ?x1 - generic ?x2 - generic)\n        (mapped ?x1 - generic)\n        (not_usable ?x1 - generic)\n        (mapped_to ?x1 - generic ?x2 - generic)\n        (connected ?x1 - operator ?x2 - num-retries ?x3 - num-retries)\n        (free ?x1 - generic)\n        (done_goal_pre )\n        (done_goal_post )\n        (has_done_a__3 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__2 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__1 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__0 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n    )\n\n    (:functions\n        (total-cost ) - number\n        (slot_goodness ?x1 - generic) - number\n        (affinity ?x1 - generic ?x2 - generic) - number\n    )\n\n    \n\n    \n    (:action enabler_operator__a__3\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__3 ?x0 ?x1 try_level_0)) (not (has_done_a__3 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__3 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__3\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__1) (known v__1 certain) (mapped_to ?x1 v__0) (known v__0 certain) (has_done_a__3 ?x0 ?x1 ?pre_level) (not (has_done_a__3 ?x0 ?x1 ?post_level)) (connected a__3 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__3 present)\n        (been_used ?x0)\n        (been_used v__1)\n        (been_used ?x1)\n        (been_used v__0)\n        (has_done_a__3 ?x0 ?x1 ?post_level)\n        (free v__4)\n        (known v__4 certain)\n        (free v__3)\n        (known v__3 certain)\n        (not (mapped v__4))\n        (not (mapped v__3))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__2\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__2 ?x0 ?x1 try_level_0)) (not (has_done_a__2 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__2 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__2\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__1) (known v__1 certain) (mapped_to ?x1 v__0) (known v__0 certain) (has_done_a__2 ?x0 ?x1 ?pre_level) (not (has_done_a__2 ?x0 ?x1 ?post_level)) (connected a__2 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__2 present)\n        (been_used ?x0)\n        (been_used v__1)\n        (been_used ?x1)\n        (been_used v__0)\n        (has_done_a__2 ?x0 ?x1 ?post_level)\n        (free v__3)\n        (known v__3 certain)\n        (free v__4)\n        (known v__4 certain)\n        (not (mapped v__3))\n        (not (mapped v__4))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__1\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__1 ?x0 ?x1 try_level_0)) (not (has_done_a__1 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__1 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__1\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__1) (known v__1 certain) (mapped_to ?x1 v__2) (known v__2 certain) (has_done_a__1 ?x0 ?x1 ?pre_level) (not (has_done_a__1 ?x0 ?x1 ?post_level)) (connected a__1 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__1 present)\n        (been_used ?x0)\n        (been_used v__1)\n        (been_used ?x1)\n        (been_used v__2)\n        (has_done_a__1 ?x0 ?x1 ?post_level)\n        (free v__4)\n        (known v__4 certain)\n        (free v__3)\n        (known v__3 certain)\n        (not (mapped v__4))\n        (not (mapped v__3))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__0\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__0 ?x0 ?x1 try_level_0)) (not (has_done_a__0 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__0 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__0\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__1) (known v__1 certain) (mapped_to ?x1 v__0) (known v__0 certain) (has_done_a__0 ?x0 ?x1 ?pre_level) (not (has_done_a__0 ?x0 ?x1 ?post_level)) (connected a__0 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__0 present)\n        (been_used ?x0)\n        (been_used v__1)\n        (been_used ?x1)\n        (been_used v__0)\n        (has_done_a__0 ?x0 ?x1 ?post_level)\n        (free v__3)\n        (known v__3 certain)\n        (free v__2)\n        (known v__2 certain)\n        (not (mapped v__3))\n        (not (mapped v__2))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action ask\n     :parameters (?x - generic)\n     :precondition (and (not (known ?x certain)) (not (not_slotfillable ?x)))\n     :effect (and\n        (free ?x)\n        (mapped_to ?x ?x)\n        (known ?x certain)\n        (not (not_usable ?x))\n        (not (mapped ?x))\n        (increase (total-cost ) (slot_goodness ?x)))\n    )\n\n\n    (:action map\n     :parameters (?x - generic ?y - generic)\n     :precondition (and (known ?x certain) (is_mappable ?x ?y) (not (not_mappable ?x ?y)) (not (mapped_to ?x ?y)) (not (new_item ?y)) (been_used ?y))\n     :effect (and\n        (known ?y certain)\n        (mapped_to ?x ?y)\n        (mapped ?x)\n        (not (been_used ?y))\n        (not (not_usable ?y))\n        (increase (total-cost ) (affinity ?x ?y)))\n    )\n\n\n    (:action map--free-alt\n     :parameters (?x - generic ?y - generic)\n     :precondition (and (known ?x certain) (is_mappable ?x ?y) (not (not_mappable ?x ?y)) (not (mapped_to ?x ?y)) (not (new_item ?y)) (been_used ?y) (free ?x))\n     :effect (and\n        (known ?y certain)\n        (mapped_to ?x ?y)\n        (mapped ?x)\n        (not (been_used ?y))\n        (not (not_usable ?y))\n        (free ?y)\n        (increase (total-cost ) 1000))\n    )\n\n)",
  "pddl_problem": "(define (problem default_name-problem)\n    (:domain default_name-domain)\n\n    (:objects\n        \n    )\n\n    (:init\n        (= (slot_goodness v__1) 100000.0)\n        (= (slot_goodness v__0) 100000.0)\n        (= (slot_goodness v__4) 100000.0)\n        (= (slot_goodness v__3) 100000.0)\n        (= (slot_goodness v__2) 200000.0)\n        (= (slot_goodness new_object_generic_0) 150000.0)\n        (= (affinity v__0 v__4) 20.0)\n        (= (affinity v__4 v__0) 20.0)\n        (= (affinity v__4 v__2) 20.0)\n        (= (affinity v__2 v__4) 20.0)\n        (= (affinity v__2 v__3) 20.0)\n        (= (affinity v__3 v__2) 20.0)\n        (= (affinity v__3 v__1) 20.0)\n        (= (affinity v__1 v__3) 20.0)\n        (= (total-cost ) 0.0)\n        (been_used v__2)\n        (been_used v__1)\n        (been_used v__0)\n        (connected a__0 try_level_0 try_level_1)\n        (connected a__3 try_level_0 try_level_1)\n        (connected a__2 try_level_0 try_level_1)\n        (connected a__1 try_level_0 try_level_1)\n        (new_item new_object_generic_0)\n        (not_slotfillable v__2)\n        (not_mappable new_object_generic_0 v__2)\n        (mapped_to v__4 v__4)\n        (mapped_to v__0 v__0)\n        (mapped_to v__3 v__3)\n        (mapped_to v__2 v__2)\n        (mapped_to new_object_generic_0 new_object_generic_0)\n        (mapped_to v__1 v__1)\n        (is_mappable v__0 v__4)\n        (is_mappable v__4 v__2)\n        (is_mappable v__2 v__4)\n        (is_mappable v__3 v__2)\n        (is_mappable v__2 v__3)\n        (is_mappable v__1 v__3)\n        (is_mappable v__3 v__1)\n        (is_mappable v__4 v__0)\n    )\n\n    (:goal\n        (has_done a__2 present)\n    )\n\n    \n    \n    (:metric minimize (total-cost ))\n)\n\n",
  "list_of_plans": [
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    }
  ],
  "sample_hash": "a85f3fa8a6fce2bd93f95a41839dbaee",
  "agent_info_generator_input": {
    "num_agents": 4,
    "num_var": 5,
    "num_input_parameters": 2,
    "num_samples": 30,
    "num_goal_agents": 1,
    "proportion_coupled_agents": 0.5,
    "proportion_slot_fillable_variables": 0.75,
    "proportion_mappable_variables": 1.0,
    "num_var_types": 0,
    "slot_filler_option": null,
    "name_generator": "NUMBER",
    "error_message": null
  },
  "compiler_planner_lag_millisecond": 239.127197265625
}
{
  "description": "The system has Action a__0, Action a__1, Action a__2, and Action a__3.\nVariables v__0 cannot be acquired by asking the user.\nVariables v__1, v__2, v__3, and v__4 can be acquired by asking the user.\nThe system has Action ask. Action ask is less preferred than acquiring the value of a variable through other actions. Action ask lets the system ask the user about the value of any variable unless that variable is explicitly marked as cannot be acquired from the user.\nTo execute Action a__2, Variable v__0 and Variable v__2 should be known.\nAfter executing Action a__2, Variable v__4 and Variable v__3 are known.\nTo execute Action a__3, Variable v__0 and Variable v__2 should be known.\nAfter executing Action a__3, Variable v__3 and Variable v__4 are known.\nTo execute Action a__1, Variable v__2 and Variable v__0 should be known.\nAfter executing Action a__1, Variable v__3 and Variable v__0 are known.\nTo execute Action a__0, Variable v__2 and Variable v__1 should be known.\nAfter executing Action a__0, Variable v__0 and Variable v__3 are known.\nAction map is used when a value for one variable can be used for another variable. Action map maps variables with the same type.\nThe goal of the system is to execute Action a__1.",
  "pddl_domain": "(define (domain default_name-domain)\n    (:requirements :equality :typing :action-costs)\n    (:types\n        generic - object\n        operator - object\n        has-done-state - object\n        constraint-status - object\n        datum-state - object\n        num-retries - object\n        object\n    )\n\n    (:constants\n        False True - constraint-status\n        certain uncertain unknown - datum-state\n        new_object_generic_0 v__0 v__1 v__2 v__3 v__4 - generic\n        future past present - has-done-state\n        try_level_0 try_level_1 try_level_2 try_level_3 try_level_4 try_level_5 try_level_6 - num-retries\n        a__0 a__1 a__2 a__3 - operator\n    )\n\n    (:predicates\n        (has_done ?x1 - operator ?x2 - has-done-state)\n        (been_used ?x1 - generic)\n        (new_item ?x1 - generic)\n        (known ?x1 - generic ?x2 - datum-state)\n        (not_slotfillable ?x1 - generic)\n        (is_mappable ?x1 - generic ?x2 - generic)\n        (not_mappable ?x1 - generic ?x2 - generic)\n        (mapped ?x1 - generic)\n        (not_usable ?x1 - generic)\n        (mapped_to ?x1 - generic ?x2 - generic)\n        (connected ?x1 - operator ?x2 - num-retries ?x3 - num-retries)\n        (free ?x1 - generic)\n        (done_goal_pre )\n        (done_goal_post )\n        (has_done_a__2 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__3 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__1 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__0 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n    )\n\n    (:functions\n        (total-cost ) - number\n        (slot_goodness ?x1 - generic) - number\n        (affinity ?x1 - generic ?x2 - generic) - number\n    )\n\n    \n\n    \n    (:action enabler_operator__a__2\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__2 ?x0 ?x1 try_level_0)) (not (has_done_a__2 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__2 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__2\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__0) (known v__0 certain) (mapped_to ?x1 v__2) (known v__2 certain) (has_done_a__2 ?x0 ?x1 ?pre_level) (not (has_done_a__2 ?x0 ?x1 ?post_level)) (connected a__2 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__2 present)\n        (been_used ?x0)\n        (been_used v__0)\n        (been_used ?x1)\n        (been_used v__2)\n        (has_done_a__2 ?x0 ?x1 ?post_level)\n        (free v__4)\n        (known v__4 certain)\n        (free v__3)\n        (known v__3 certain)\n        (not (mapped v__4))\n        (not (mapped v__3))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__3\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__3 ?x0 ?x1 try_level_0)) (not (has_done_a__3 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__3 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__3\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__0) (known v__0 certain) (mapped_to ?x1 v__2) (known v__2 certain) (has_done_a__3 ?x0 ?x1 ?pre_level) (not (has_done_a__3 ?x0 ?x1 ?post_level)) (connected a__3 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__3 present)\n        (been_used ?x0)\n        (been_used v__0)\n        (been_used ?x1)\n        (been_used v__2)\n        (has_done_a__3 ?x0 ?x1 ?post_level)\n        (free v__3)\n        (known v__3 certain)\n        (free v__4)\n        (known v__4 certain)\n        (not (mapped v__3))\n        (not (mapped v__4))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__1\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__1 ?x0 ?x1 try_level_0)) (not (has_done_a__1 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__1 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__1\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__2) (known v__2 certain) (mapped_to ?x1 v__0) (known v__0 certain) (has_done_a__1 ?x0 ?x1 ?pre_level) (not (has_done_a__1 ?x0 ?x1 ?post_level)) (connected a__1 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__1 present)\n        (been_used ?x0)\n        (been_used v__2)\n        (been_used ?x1)\n        (been_used v__0)\n        (has_done_a__1 ?x0 ?x1 ?post_level)\n        (free v__3)\n        (known v__3 certain)\n        (free v__0)\n        (known v__0 certain)\n        (not (mapped v__3))\n        (not (mapped v__0))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__0\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__0 ?x0 ?x1 try_level_0)) (not (has_done_a__0 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__0 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__0\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__2) (known v__2 certain) (mapped_to ?x1 v__1) (known v__1 certain) (has_done_a__0 ?x0 ?x1 ?pre_level) (not (has_done_a__0 ?x0 ?x1 ?post_level)) (connected a__0 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__0 present)\n        (been_used ?x0)\n        (been_used v__2)\n        (been_used ?x1)\n        (been_used v__1)\n        (has_done_a__0 ?x0 ?x1 ?post_level)\n        (free v__0)\n        (known v__0 certain)\n        (free v__3)\n        (known v__3 certain)\n        (not (mapped v__0))\n        (not (mapped v__3))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action ask\n     :parameters (?x - generic)\n     :precondition (and (not (known ?x certain)) (not (not_slotfillable ?x)))\n     :effect (and\n        (free ?x)\n        (mapped_to ?x ?x)\n        (known ?x certain)\n        (not (not_usable ?x))\n        (not (mapped ?x))\n        (increase (total-cost ) (slot_goodness ?x)))\n    )\n\n\n    (:action map\n     :parameters (?x - generic ?y - generic)\n     :precondition (and (known ?x certain) (is_mappable ?x ?y) (not (not_mappable ?x ?y)) (not (mapped_to ?x ?y)) (not (new_item ?y)) (been_used ?y))\n     :effect (and\n        (known ?y certain)\n        (mapped_to ?x ?y)\n        (mapped ?x)\n        (not (been_used ?y))\n        (not (not_usable ?y))\n        (increase (total-cost ) (affinity ?x ?y)))\n    )\n\n\n    (:action map--free-alt\n     :parameters (?x - generic ?y - generic)\n     :precondition (and (known ?x certain) (is_mappable ?x ?y) (not (not_mappable ?x ?y)) (not (mapped_to ?x ?y)) (not (new_item ?y)) (been_used ?y) (free ?x))\n     :effect (and\n        (known ?y certain)\n        (mapped_to ?x ?y)\n        (mapped ?x)\n        (not (been_used ?y))\n        (not (not_usable ?y))\n        (free ?y)\n        (increase (total-cost ) 1000))\n    )\n\n)",
  "pddl_problem": "(define (problem default_name-problem)\n    (:domain default_name-domain)\n\n    (:objects\n        \n    )\n\n    (:init\n        (= (slot_goodness v__0) 200000.0)\n        (= (slot_goodness v__2) 100000.0)\n        (= (slot_goodness v__4) 100000.0)\n        (= (slot_goodness v__3) 100000.0)\n        (= (slot_goodness v__1) 100000.0)\n        (= (slot_goodness new_object_generic_0) 150000.0)\n        (= (total-cost ) 0.0)\n        (been_used v__1)\n        (been_used v__2)\n        (been_used v__0)\n        (connected a__1 try_level_0 try_level_1)\n        (connected a__0 try_level_0 try_level_1)\n        (connected a__3 try_level_0 try_level_1)\n        (connected a__2 try_level_0 try_level_1)\n        (new_item new_object_generic_0)\n        (not_slotfillable v__0)\n        (not_mappable new_object_generic_0 v__0)\n        (mapped_to v__2 v__2)\n        (mapped_to v__1 v__1)\n        (mapped_to v__3 v__3)\n        (mapped_to v__0 v__0)\n        (mapped_to new_object_generic_0 new_object_generic_0)\n        (mapped_to v__4 v__4)\n    )\n\n    (:goal\n        (has_done a__1 present)\n    )\n\n    \n    \n    (:metric minimize (total-cost ))\n)\n\n",
  "list_of_plans": [],
  "sample_hash": "0f6c965eb397d28a7269e381d0c7fb3d",
  "agent_info_generator_input": {
    "num_agents": 4,
    "num_var": 5,
    "num_input_parameters": 2,
    "num_samples": 30,
    "num_goal_agents": 1,
    "proportion_coupled_agents": 1.0,
    "proportion_slot_fillable_variables": 0.75,
    "proportion_mappable_variables": 0.0,
    "num_var_types": 0,
    "slot_filler_option": null,
    "name_generator": "NUMBER",
    "error_message": null
  },
  "compiler_planner_lag_millisecond": 195.551025390625
}
{
  "description": "The system has Action a__0, Action a__1, Action a__2, and Action a__3.\nVariables v__0, v__2, and v__4 can be acquired by asking the user.\nVariables v__1 and v__3 cannot be acquired by asking the user.\nThe system has Action ask. Action ask is less preferred than acquiring the value of a variable through other actions. Action ask lets the system ask the user about the value of any variable unless that variable is explicitly marked as cannot be acquired from the user.\nTo execute Action a__0, Variable v__0 and Variable v__2 should be known.\nAfter executing Action a__0, Variable v__3 and Variable v__1 are known.\nTo execute Action a__2, Variable v__3 and Variable v__2 should be known.\nAfter executing Action a__2, Variable v__1 and Variable v__4 are known.\nTo execute Action a__1, Variable v__3 and Variable v__2 should be known.\nAfter executing Action a__1, Variable v__3 and Variable v__4 are known.\nTo execute Action a__3, Variable v__2 and Variable v__0 should be known.\nAfter executing Action a__3, Variable v__1 and Variable v__4 are known.\nAction map is used when a value for one variable can be used for another variable. Action map maps variables with the same type.\nValues for Variable v__0 can be used for Variable v__1. Values for Variable v__1 can be used for Variable v__0. Values for Variable v__1 can be used for Variable v__3. Values for Variable v__3 can be used for Variable v__1. Values for Variable v__3 can be used for Variable v__4. Values for Variable v__4 can be used for Variable v__3. Values for Variable v__4 can be used for Variable v__2. Values for Variable v__2 can be used for Variable v__4.\nThe goal of the system is to execute Action a__3.",
  "pddl_domain": "(define (domain default_name-domain)\n    (:requirements :action-costs :typing :equality)\n    (:types\n        generic - object\n        operator - object\n        has-done-state - object\n        constraint-status - object\n        datum-state - object\n        num-retries - object\n        object\n    )\n\n    (:constants\n        False True - constraint-status\n        certain uncertain unknown - datum-state\n        new_object_generic_0 v__0 v__1 v__2 v__3 v__4 - generic\n        future past present - has-done-state\n        try_level_0 try_level_1 try_level_2 try_level_3 try_level_4 try_level_5 try_level_6 - num-retries\n        a__0 a__1 a__2 a__3 - operator\n    )\n\n    (:predicates\n        (has_done ?x1 - operator ?x2 - has-done-state)\n        (been_used ?x1 - generic)\n        (new_item ?x1 - generic)\n        (known ?x1 - generic ?x2 - datum-state)\n        (not_slotfillable ?x1 - generic)\n        (is_mappable ?x1 - generic ?x2 - generic)\n        (not_mappable ?x1 - generic ?x2 - generic)\n        (mapped ?x1 - generic)\n        (not_usable ?x1 - generic)\n        (mapped_to ?x1 - generic ?x2 - generic)\n        (connected ?x1 - operator ?x2 - num-retries ?x3 - num-retries)\n        (free ?x1 - generic)\n        (done_goal_pre )\n        (done_goal_post )\n        (has_done_a__0 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__2 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__1 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__3 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n    )\n\n    (:functions\n        (total-cost ) - number\n        (slot_goodness ?x1 - generic) - number\n        (affinity ?x1 - generic ?x2 - generic) - number\n    )\n\n    \n\n    \n    (:action enabler_operator__a__0\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__0 ?x0 ?x1 try_level_0)) (not (has_done_a__0 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__0 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__0\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__0) (known v__0 certain) (mapped_to ?x1 v__2) (known v__2 certain) (has_done_a__0 ?x0 ?x1 ?pre_level) (not (has_done_a__0 ?x0 ?x1 ?post_level)) (connected a__0 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__0 present)\n        (been_used ?x0)\n        (been_used v__0)\n        (been_used ?x1)\n        (been_used v__2)\n        (has_done_a__0 ?x0 ?x1 ?post_level)\n        (free v__3)\n        (known v__3 certain)\n        (free v__1)\n        (known v__1 certain)\n        (not (mapped v__3))\n        (not (mapped v__1))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__2\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__2 ?x0 ?x1 try_level_0)) (not (has_done_a__2 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__2 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__2\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__3) (known v__3 certain) (mapped_to ?x1 v__2) (known v__2 certain) (has_done_a__2 ?x0 ?x1 ?pre_level) (not (has_done_a__2 ?x0 ?x1 ?post_level)) (connected a__2 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__2 present)\n        (been_used ?x0)\n        (been_used v__3)\n        (been_used ?x1)\n        (been_used v__2)\n        (has_done_a__2 ?x0 ?x1 ?post_level)\n        (free v__1)\n        (known v__1 certain)\n        (free v__4)\n        (known v__4 certain)\n        (not (mapped v__1))\n        (not (mapped v__4))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__1\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__1 ?x0 ?x1 try_level_0)) (not (has_done_a__1 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__1 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__1\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__3) (known v__3 certain) (mapped_to ?x1 v__2) (known v__2 certain) (has_done_a__1 ?x0 ?x1 ?pre_level) (not (has_done_a__1 ?x0 ?x1 ?post_level)) (connected a__1 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__1 present)\n        (been_used ?x0)\n        (been_used v__3)\n        (been_used ?x1)\n        (been_used v__2)\n        (has_done_a__1 ?x0 ?x1 ?post_level)\n        (free v__3)\n        (known v__3 certain)\n        (free v__4)\n        (known v__4 certain)\n        (not (mapped v__3))\n        (not (mapped v__4))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__3\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__3 ?x0 ?x1 try_level_0)) (not (has_done_a__3 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__3 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__3\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__2) (known v__2 certain) (mapped_to ?x1 v__0) (known v__0 certain) (has_done_a__3 ?x0 ?x1 ?pre_level) (not (has_done_a__3 ?x0 ?x1 ?post_level)) (connected a__3 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__3 present)\n        (been_used ?x0)\n        (been_used v__2)\n        (been_used ?x1)\n        (been_used v__0)\n        (has_done_a__3 ?x0 ?x1 ?post_level)\n        (free v__1)\n        (known v__1 certain)\n        (free v__4)\n        (known v__4 certain)\n        (not (mapped v__1))\n        (not (mapped v__4))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action ask\n     :parameters (?x - generic)\n     :precondition (and (not (known ?x certain)) (not (not_slotfillable ?x)))\n     :effect (and\n        (free ?x)\n        (mapped_to ?x ?x)\n        (known ?x certain)\n        (not (not_usable ?x))\n        (not (mapped ?x))\n        (increase (total-cost ) (slot_goodness ?x)))\n    )\n\n\n    (:action map\n     :parameters (?x - generic ?y - generic)\n     :precondition (and (known ?x certain) (is_mappable ?x ?y) (not (not_mappable ?x ?y)) (not (mapped_to ?x ?y)) (not (new_item ?y)) (been_used ?y))\n     :effect (and\n        (known ?y certain)\n        (mapped_to ?x ?y)\n        (mapped ?x)\n        (not (been_used ?y))\n        (not (not_usable ?y))\n        (increase (total-cost ) (affinity ?x ?y)))\n    )\n\n\n    (:action map--free-alt\n     :parameters (?x - generic ?y - generic)\n     :precondition (and (known ?x certain) (is_mappable ?x ?y) (not (not_mappable ?x ?y)) (not (mapped_to ?x ?y)) (not (new_item ?y)) (been_used ?y) (free ?x))\n     :effect (and\n        (known ?y certain)\n        (mapped_to ?x ?y)\n        (mapped ?x)\n        (not (been_used ?y))\n        (not (not_usable ?y))\n        (free ?y)\n        (increase (total-cost ) 1000))\n    )\n\n)",
  "pddl_problem": "(define (problem default_name-problem)\n    (:domain default_name-domain)\n\n    (:objects\n        \n    )\n\n    (:init\n        (= (slot_goodness v__0) 100000.0)\n        (= (slot_goodness v__2) 100000.0)\n        (= (slot_goodness v__3) 200000.0)\n        (= (slot_goodness v__1) 200000.0)\n        (= (slot_goodness v__4) 100000.0)\n        (= (slot_goodness new_object_generic_0) 150000.0)\n        (= (affinity v__0 v__1) 20.0)\n        (= (affinity v__1 v__0) 20.0)\n        (= (affinity v__1 v__3) 20.0)\n        (= (affinity v__3 v__1) 20.0)\n        (= (affinity v__3 v__4) 20.0)\n        (= (affinity v__4 v__3) 20.0)\n        (= (affinity v__4 v__2) 20.0)\n        (= (affinity v__2 v__4) 20.0)\n        (= (total-cost ) 0.0)\n        (been_used v__2)\n        (been_used v__3)\n        (been_used v__0)\n        (connected a__0 try_level_0 try_level_1)\n        (connected a__3 try_level_0 try_level_1)\n        (connected a__2 try_level_0 try_level_1)\n        (connected a__1 try_level_0 try_level_1)\n        (new_item new_object_generic_0)\n        (not_slotfillable v__1)\n        (not_slotfillable v__3)\n        (not_mappable new_object_generic_0 v__1)\n        (not_mappable new_object_generic_0 v__3)\n        (mapped_to v__4 v__4)\n        (mapped_to v__0 v__0)\n        (mapped_to v__3 v__3)\n        (mapped_to v__2 v__2)\n        (mapped_to new_object_generic_0 new_object_generic_0)\n        (mapped_to v__1 v__1)\n        (is_mappable v__1 v__0)\n        (is_mappable v__3 v__4)\n        (is_mappable v__4 v__2)\n        (is_mappable v__2 v__4)\n        (is_mappable v__1 v__3)\n        (is_mappable v__3 v__1)\n        (is_mappable v__0 v__1)\n        (is_mappable v__4 v__3)\n    )\n\n    (:goal\n        (has_done a__3 present)\n    )\n\n    \n    \n    (:metric minimize (total-cost ))\n)\n\n",
  "list_of_plans": [
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__1",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__1",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__1",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__1",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__1",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__1",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__1",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__1",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__1",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__4",
              "item_type": "generic"
            },
            {
              "item_id": "v__3",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__1",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__3",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    }
  ],
  "sample_hash": "96e90f8751d249463f2dfa99f855f4eb",
  "agent_info_generator_input": {
    "num_agents": 4,
    "num_var": 5,
    "num_input_parameters": 2,
    "num_samples": 30,
    "num_goal_agents": 1,
    "proportion_coupled_agents": 0.75,
    "proportion_slot_fillable_variables": 0.5,
    "proportion_mappable_variables": 1.0,
    "num_var_types": 0,
    "slot_filler_option": null,
    "name_generator": "NUMBER",
    "error_message": null
  },
  "compiler_planner_lag_millisecond": 254.719970703125
}
{
  "description": "The system has Action a__0, Action a__1, Action a__2, and Action a__3.\nVariables v__0, v__1, v__2, v__3, and v__4 can be acquired by asking the user.\nThe system has Action ask. Action ask is less preferred than acquiring the value of a variable through other actions. Action ask lets the system ask the user about the value of any variable unless that variable is explicitly marked as cannot be acquired from the user.\nTo execute Action a__3, Variable v__0 and Variable v__1 should be known.\nAfter executing Action a__3, Variable v__3 and Variable v__2 are known.\nTo execute Action a__1, Variable v__1 and Variable v__4 should be known.\nAfter executing Action a__1, Variable v__3 and Variable v__2 are known.\nTo execute Action a__0, Variable v__1 and Variable v__0 should be known.\nAfter executing Action a__0, Variable v__2 and Variable v__4 are known.\nTo execute Action a__2, Variable v__0 and Variable v__1 should be known.\nAfter executing Action a__2, Variable v__2 and Variable v__3 are known.\nAction map is used when a value for one variable can be used for another variable. Action map maps variables with the same type.\nValues for Variable v__0 can be used for Variable v__3. Values for Variable v__3 can be used for Variable v__0. Values for Variable v__3 can be used for Variable v__4. Values for Variable v__4 can be used for Variable v__3. Values for Variable v__4 can be used for Variable v__2. Values for Variable v__2 can be used for Variable v__4. Values for Variable v__2 can be used for Variable v__1. Values for Variable v__1 can be used for Variable v__2.\nThe goal of the system is to execute Action a__2.",
  "pddl_domain": "(define (domain default_name-domain)\n    (:requirements :equality :action-costs :typing)\n    (:types\n        generic - object\n        operator - object\n        has-done-state - object\n        constraint-status - object\n        datum-state - object\n        num-retries - object\n        object\n    )\n\n    (:constants\n        False True - constraint-status\n        certain uncertain unknown - datum-state\n        new_object_generic_0 v__0 v__1 v__2 v__3 v__4 - generic\n        future past present - has-done-state\n        try_level_0 try_level_1 try_level_2 try_level_3 try_level_4 try_level_5 try_level_6 - num-retries\n        a__0 a__1 a__2 a__3 - operator\n    )\n\n    (:predicates\n        (has_done ?x1 - operator ?x2 - has-done-state)\n        (been_used ?x1 - generic)\n        (new_item ?x1 - generic)\n        (known ?x1 - generic ?x2 - datum-state)\n        (not_slotfillable ?x1 - generic)\n        (is_mappable ?x1 - generic ?x2 - generic)\n        (not_mappable ?x1 - generic ?x2 - generic)\n        (mapped ?x1 - generic)\n        (not_usable ?x1 - generic)\n        (mapped_to ?x1 - generic ?x2 - generic)\n        (connected ?x1 - operator ?x2 - num-retries ?x3 - num-retries)\n        (free ?x1 - generic)\n        (done_goal_pre )\n        (done_goal_post )\n        (has_done_a__3 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__1 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__0 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__2 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n    )\n\n    (:functions\n        (total-cost ) - number\n        (slot_goodness ?x1 - generic) - number\n        (affinity ?x1 - generic ?x2 - generic) - number\n    )\n\n    \n\n    \n    (:action enabler_operator__a__3\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__3 ?x0 ?x1 try_level_0)) (not (has_done_a__3 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__3 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__3\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__0) (known v__0 certain) (mapped_to ?x1 v__1) (known v__1 certain) (has_done_a__3 ?x0 ?x1 ?pre_level) (not (has_done_a__3 ?x0 ?x1 ?post_level)) (connected a__3 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__3 present)\n        (been_used ?x0)\n        (been_used v__0)\n        (been_used ?x1)\n        (been_used v__1)\n        (has_done_a__3 ?x0 ?x1 ?post_level)\n        (free v__3)\n        (known v__3 certain)\n        (free v__2)\n        (known v__2 certain)\n        (not (mapped v__3))\n        (not (mapped v__2))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__1\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__1 ?x0 ?x1 try_level_0)) (not (has_done_a__1 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__1 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__1\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__1) (known v__1 certain) (mapped_to ?x1 v__4) (known v__4 certain) (has_done_a__1 ?x0 ?x1 ?pre_level) (not (has_done_a__1 ?x0 ?x1 ?post_level)) (connected a__1 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__1 present)\n        (been_used ?x0)\n        (been_used v__1)\n        (been_used ?x1)\n        (been_used v__4)\n        (has_done_a__1 ?x0 ?x1 ?post_level)\n        (free v__3)\n        (known v__3 certain)\n        (free v__2)\n        (known v__2 certain)\n        (not (mapped v__3))\n        (not (mapped v__2))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__0\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__0 ?x0 ?x1 try_level_0)) (not (has_done_a__0 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__0 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__0\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__1) (known v__1 certain) (mapped_to ?x1 v__0) (known v__0 certain) (has_done_a__0 ?x0 ?x1 ?pre_level) (not (has_done_a__0 ?x0 ?x1 ?post_level)) (connected a__0 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__0 present)\n        (been_used ?x0)\n        (been_used v__1)\n        (been_used ?x1)\n        (been_used v__0)\n        (has_done_a__0 ?x0 ?x1 ?post_level)\n        (free v__2)\n        (known v__2 certain)\n        (free v__4)\n        (known v__4 certain)\n        (not (mapped v__2))\n        (not (mapped v__4))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__2\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__2 ?x0 ?x1 try_level_0)) (not (has_done_a__2 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__2 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__2\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__0) (known v__0 certain) (mapped_to ?x1 v__1) (known v__1 certain) (has_done_a__2 ?x0 ?x1 ?pre_level) (not (has_done_a__2 ?x0 ?x1 ?post_level)) (connected a__2 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__2 present)\n        (been_used ?x0)\n        (been_used v__0)\n        (been_used ?x1)\n        (been_used v__1)\n        (has_done_a__2 ?x0 ?x1 ?post_level)\n        (free v__2)\n        (known v__2 certain)\n        (free v__3)\n        (known v__3 certain)\n        (not (mapped v__2))\n        (not (mapped v__3))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action ask\n     :parameters (?x - generic)\n     :precondition (and (not (known ?x certain)) (not (not_slotfillable ?x)))\n     :effect (and\n        (free ?x)\n        (mapped_to ?x ?x)\n        (known ?x certain)\n        (not (not_usable ?x))\n        (not (mapped ?x))\n        (increase (total-cost ) (slot_goodness ?x)))\n    )\n\n\n    (:action map\n     :parameters (?x - generic ?y - generic)\n     :precondition (and (known ?x certain) (is_mappable ?x ?y) (not (not_mappable ?x ?y)) (not (mapped_to ?x ?y)) (not (new_item ?y)) (been_used ?y))\n     :effect (and\n        (known ?y certain)\n        (mapped_to ?x ?y)\n        (mapped ?x)\n        (not (been_used ?y))\n        (not (not_usable ?y))\n        (increase (total-cost ) (affinity ?x ?y)))\n    )\n\n\n    (:action map--free-alt\n     :parameters (?x - generic ?y - generic)\n     :precondition (and (known ?x certain) (is_mappable ?x ?y) (not (not_mappable ?x ?y)) (not (mapped_to ?x ?y)) (not (new_item ?y)) (been_used ?y) (free ?x))\n     :effect (and\n        (known ?y certain)\n        (mapped_to ?x ?y)\n        (mapped ?x)\n        (not (been_used ?y))\n        (not (not_usable ?y))\n        (free ?y)\n        (increase (total-cost ) 1000))\n    )\n\n)",
  "pddl_problem": "(define (problem default_name-problem)\n    (:domain default_name-domain)\n\n    (:objects\n        \n    )\n\n    (:init\n        (= (slot_goodness v__0) 100000.0)\n        (= (slot_goodness v__1) 100000.0)\n        (= (slot_goodness v__3) 100000.0)\n        (= (slot_goodness v__2) 100000.0)\n        (= (slot_goodness v__4) 100000.0)\n        (= (slot_goodness new_object_generic_0) 150000.0)\n        (= (affinity v__0 v__3) 20.0)\n        (= (affinity v__3 v__0) 20.0)\n        (= (affinity v__3 v__4) 20.0)\n        (= (affinity v__4 v__3) 20.0)\n        (= (affinity v__4 v__2) 20.0)\n        (= (affinity v__2 v__4) 20.0)\n        (= (affinity v__2 v__1) 20.0)\n        (= (affinity v__1 v__2) 20.0)\n        (= (total-cost ) 0.0)\n        (been_used v__1)\n        (been_used v__4)\n        (been_used v__0)\n        (connected a__0 try_level_0 try_level_1)\n        (connected a__1 try_level_0 try_level_1)\n        (connected a__3 try_level_0 try_level_1)\n        (connected a__2 try_level_0 try_level_1)\n        (new_item new_object_generic_0)\n        (mapped_to v__0 v__0)\n        (mapped_to new_object_generic_0 new_object_generic_0)\n        (mapped_to v__4 v__4)\n        (mapped_to v__1 v__1)\n        (mapped_to v__2 v__2)\n        (mapped_to v__3 v__3)\n        (is_mappable v__2 v__1)\n        (is_mappable v__2 v__4)\n        (is_mappable v__4 v__3)\n        (is_mappable v__3 v__0)\n        (is_mappable v__3 v__4)\n        (is_mappable v__0 v__3)\n        (is_mappable v__4 v__2)\n        (is_mappable v__1 v__2)\n    )\n\n    (:goal\n        (has_done a__2 present)\n    )\n\n    \n    \n    (:metric minimize (total-cost ))\n)\n\n",
  "list_of_plans": [
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    },
    {
      "cost": 110062.0,
      "length": 8.0,
      "metadata": null,
      "plan": [
        {
          "name": "ask",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__1",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__2",
              "item_type": "generic"
            },
            {
              "item_id": "v__4",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__1",
          "parameters": [],
          "inputs": [],
          "outputs": []
        },
        {
          "name": "map",
          "parameters": [],
          "inputs": [
            {
              "item_id": "v__3",
              "item_type": "generic"
            },
            {
              "item_id": "v__0",
              "item_type": "generic"
            }
          ],
          "outputs": []
        },
        {
          "name": "a__2",
          "parameters": [],
          "inputs": [],
          "outputs": []
        }
      ]
    }
  ],
  "sample_hash": "16cc15aa3443278625252356b6249921",
  "agent_info_generator_input": {
    "num_agents": 4,
    "num_var": 5,
    "num_input_parameters": 2,
    "num_samples": 10,
    "num_goal_agents": 1,
    "proportion_coupled_agents": 0.5,
    "proportion_slot_fillable_variables": 1.0,
    "proportion_mappable_variables": 1.0,
    "num_var_types": 0,
    "slot_filler_option": null,
    "name_generator": "NUMBER",
    "error_message": null
  },
  "compiler_planner_lag_millisecond": 231.31982421875
}
{
  "description": "The system has Action a__0, Action a__1, Action a__2, and Action a__3.\nVariables v__0 and v__1 can be acquired by asking the user.\nVariables v__2, v__3, and v__4 cannot be acquired by asking the user.\nThe system has Action ask. Action ask is less preferred than acquiring the value of a variable through other actions. Action ask lets the system ask the user about the value of any variable unless that variable is explicitly marked as cannot be acquired from the user.\nTo execute Action a__2, Variable v__1 and Variable v__4 should be known.\nAfter executing Action a__2, Variable v__3 and Variable v__2 are known.\nTo execute Action a__3, Variable v__1 and Variable v__0 should be known.\nAfter executing Action a__3, Variable v__3 and Variable v__2 are known.\nTo execute Action a__0, Variable v__1 and Variable v__0 should be known.\nAfter executing Action a__0, Variable v__4 and Variable v__3 are known.\nTo execute Action a__1, Variable v__4 and Variable v__1 should be known.\nAfter executing Action a__1, Variable v__2 and Variable v__4 are known.\nAction map is used when a value for one variable can be used for another variable. Action map maps variables with the same type.\nThe goal of the system is to execute Action a__0.",
  "pddl_domain": "(define (domain default_name-domain)\n    (:requirements :equality :typing :action-costs)\n    (:types\n        generic - object\n        operator - object\n        has-done-state - object\n        constraint-status - object\n        datum-state - object\n        num-retries - object\n        object\n    )\n\n    (:constants\n        False True - constraint-status\n        certain uncertain unknown - datum-state\n        new_object_generic_0 v__0 v__1 v__2 v__3 v__4 - generic\n        future past present - has-done-state\n        try_level_0 try_level_1 try_level_2 try_level_3 try_level_4 try_level_5 try_level_6 - num-retries\n        a__0 a__1 a__2 a__3 - operator\n    )\n\n    (:predicates\n        (has_done ?x1 - operator ?x2 - has-done-state)\n        (been_used ?x1 - generic)\n        (new_item ?x1 - generic)\n        (known ?x1 - generic ?x2 - datum-state)\n        (not_slotfillable ?x1 - generic)\n        (is_mappable ?x1 - generic ?x2 - generic)\n        (not_mappable ?x1 - generic ?x2 - generic)\n        (mapped ?x1 - generic)\n        (not_usable ?x1 - generic)\n        (mapped_to ?x1 - generic ?x2 - generic)\n        (connected ?x1 - operator ?x2 - num-retries ?x3 - num-retries)\n        (free ?x1 - generic)\n        (done_goal_pre )\n        (done_goal_post )\n        (has_done_a__2 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__3 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__0 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__1 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n    )\n\n    (:functions\n        (total-cost ) - number\n        (slot_goodness ?x1 - generic) - number\n        (affinity ?x1 - generic ?x2 - generic) - number\n    )\n\n    \n\n    \n    (:action enabler_operator__a__2\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__2 ?x0 ?x1 try_level_0)) (not (has_done_a__2 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__2 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__2\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__1) (known v__1 certain) (mapped_to ?x1 v__4) (known v__4 certain) (has_done_a__2 ?x0 ?x1 ?pre_level) (not (has_done_a__2 ?x0 ?x1 ?post_level)) (connected a__2 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__2 present)\n        (been_used ?x0)\n        (been_used v__1)\n        (been_used ?x1)\n        (been_used v__4)\n        (has_done_a__2 ?x0 ?x1 ?post_level)\n        (free v__3)\n        (known v__3 certain)\n        (free v__2)\n        (known v__2 certain)\n        (not (mapped v__3))\n        (not (mapped v__2))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__3\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__3 ?x0 ?x1 try_level_0)) (not (has_done_a__3 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__3 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__3\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__1) (known v__1 certain) (mapped_to ?x1 v__0) (known v__0 certain) (has_done_a__3 ?x0 ?x1 ?pre_level) (not (has_done_a__3 ?x0 ?x1 ?post_level)) (connected a__3 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__3 present)\n        (been_used ?x0)\n        (been_used v__1)\n        (been_used ?x1)\n        (been_used v__0)\n        (has_done_a__3 ?x0 ?x1 ?post_level)\n        (free v__3)\n        (known v__3 certain)\n        (free v__2)\n        (known v__2 certain)\n        (not (mapped v__3))\n        (not (mapped v__2))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__0\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__0 ?x0 ?x1 try_level_0)) (not (has_done_a__0 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__0 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__0\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__1) (known v__1 certain) (mapped_to ?x1 v__0) (known v__0 certain) (has_done_a__0 ?x0 ?x1 ?pre_level) (not (has_done_a__0 ?x0 ?x1 ?post_level)) (connected a__0 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__0 present)\n        (been_used ?x0)\n        (been_used v__1)\n        (been_used ?x1)\n        (been_used v__0)\n        (has_done_a__0 ?x0 ?x1 ?post_level)\n        (free v__4)\n        (known v__4 certain)\n        (free v__3)\n        (known v__3 certain)\n        (not (mapped v__4))\n        (not (mapped v__3))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__1\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__1 ?x0 ?x1 try_level_0)) (not (has_done_a__1 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__1 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__1\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__4) (known v__4 certain) (mapped_to ?x1 v__1) (known v__1 certain) (has_done_a__1 ?x0 ?x1 ?pre_level) (not (has_done_a__1 ?x0 ?x1 ?post_level)) (connected a__1 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__1 present)\n        (been_used ?x0)\n        (been_used v__4)\n        (been_used ?x1)\n        (been_used v__1)\n        (has_done_a__1 ?x0 ?x1 ?post_level)\n        (free v__2)\n        (known v__2 certain)\n        (free v__4)\n        (known v__4 certain)\n        (not (mapped v__2))\n        (not (mapped v__4))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action ask\n     :parameters (?x - generic)\n     :precondition (and (not (known ?x certain)) (not (not_slotfillable ?x)))\n     :effect (and\n        (free ?x)\n        (mapped_to ?x ?x)\n        (known ?x certain)\n        (not (not_usable ?x))\n        (not (mapped ?x))\n        (increase (total-cost ) (slot_goodness ?x)))\n    )\n\n\n    (:action map\n     :parameters (?x - generic ?y - generic)\n     :precondition (and (known ?x certain) (is_mappable ?x ?y) (not (not_mappable ?x ?y)) (not (mapped_to ?x ?y)) (not (new_item ?y)) (been_used ?y))\n     :effect (and\n        (known ?y certain)\n        (mapped_to ?x ?y)\n        (mapped ?x)\n        (not (been_used ?y))\n        (not (not_usable ?y))\n        (increase (total-cost ) (affinity ?x ?y)))\n    )\n\n\n    (:action map--free-alt\n     :parameters (?x - generic ?y - generic)\n     :precondition (and (known ?x certain) (is_mappable ?x ?y) (not (not_mappable ?x ?y)) (not (mapped_to ?x ?y)) (not (new_item ?y)) (been_used ?y) (free ?x))\n     :effect (and\n        (known ?y certain)\n        (mapped_to ?x ?y)\n        (mapped ?x)\n        (not (been_used ?y))\n        (not (not_usable ?y))\n        (free ?y)\n        (increase (total-cost ) 1000))\n    )\n\n)",
  "pddl_problem": "(define (problem default_name-problem)\n    (:domain default_name-domain)\n\n    (:objects\n        \n    )\n\n    (:init\n        (= (slot_goodness v__1) 100000.0)\n        (= (slot_goodness v__4) 200000.0)\n        (= (slot_goodness v__3) 200000.0)\n        (= (slot_goodness v__2) 200000.0)\n        (= (slot_goodness v__0) 100000.0)\n        (= (slot_goodness new_object_generic_0) 150000.0)\n        (= (total-cost ) 0.0)\n        (been_used v__1)\n        (been_used v__4)\n        (been_used v__0)\n        (connected a__1 try_level_0 try_level_1)\n        (connected a__0 try_level_0 try_level_1)\n        (connected a__3 try_level_0 try_level_1)\n        (connected a__2 try_level_0 try_level_1)\n        (new_item new_object_generic_0)\n        (not_slotfillable v__4)\n        (not_slotfillable v__3)\n        (not_slotfillable v__2)\n        (not_mappable new_object_generic_0 v__4)\n        (not_mappable new_object_generic_0 v__2)\n        (not_mappable new_object_generic_0 v__3)\n        (mapped_to v__2 v__2)\n        (mapped_to v__1 v__1)\n        (mapped_to v__3 v__3)\n        (mapped_to v__0 v__0)\n        (mapped_to new_object_generic_0 new_object_generic_0)\n        (mapped_to v__4 v__4)\n    )\n\n    (:goal\n        (has_done a__0 present)\n    )\n\n    \n    \n    (:metric minimize (total-cost ))\n)\n\n",
  "list_of_plans": [],
  "sample_hash": "314c42197124945e599aa449fe7d5969",
  "agent_info_generator_input": {
    "num_agents": 4,
    "num_var": 5,
    "num_input_parameters": 2,
    "num_samples": 30,
    "num_goal_agents": 1,
    "proportion_coupled_agents": 0.75,
    "proportion_slot_fillable_variables": 0.25,
    "proportion_mappable_variables": 0.0,
    "num_var_types": 0,
    "slot_filler_option": null,
    "name_generator": "NUMBER",
    "error_message": null
  },
  "compiler_planner_lag_millisecond": 206.839111328125
}
{
  "description": "The system has Action a__0, Action a__1, Action a__2, and Action a__3.\nVariables v__2, v__3, and v__4 cannot be acquired by asking the user.\nVariables v__0 and v__1 can be acquired by asking the user.\nThe system has Action ask. Action ask is less preferred than acquiring the value of a variable through other actions. Action ask lets the system ask the user about the value of any variable unless that variable is explicitly marked as cannot be acquired from the user.\nTo execute Action a__2, Variable v__4 and Variable v__1 should be known.\nAfter executing Action a__2, Variable v__2 and Variable v__3 are known.\nTo execute Action a__3, Variable v__1 and Variable v__0 should be known.\nAfter executing Action a__3, Variable v__2 and Variable v__3 are known.\nTo execute Action a__0, Variable v__1 and Variable v__0 should be known.\nAfter executing Action a__0, Variable v__4 and Variable v__3 are known.\nTo execute Action a__1, Variable v__4 and Variable v__1 should be known.\nAfter executing Action a__1, Variable v__2 and Variable v__4 are known.\nAction map is used when a value for one variable can be used for another variable. Action map maps variables with the same type.\nThe goal of the system is to execute Action a__1.",
  "pddl_domain": "(define (domain default_name-domain)\n    (:requirements :equality :typing :action-costs)\n    (:types\n        generic - object\n        operator - object\n        has-done-state - object\n        constraint-status - object\n        datum-state - object\n        num-retries - object\n        object\n    )\n\n    (:constants\n        False True - constraint-status\n        certain uncertain unknown - datum-state\n        new_object_generic_0 v__0 v__1 v__2 v__3 v__4 - generic\n        future past present - has-done-state\n        try_level_0 try_level_1 try_level_2 try_level_3 try_level_4 try_level_5 try_level_6 - num-retries\n        a__0 a__1 a__2 a__3 - operator\n    )\n\n    (:predicates\n        (has_done ?x1 - operator ?x2 - has-done-state)\n        (been_used ?x1 - generic)\n        (new_item ?x1 - generic)\n        (known ?x1 - generic ?x2 - datum-state)\n        (not_slotfillable ?x1 - generic)\n        (is_mappable ?x1 - generic ?x2 - generic)\n        (not_mappable ?x1 - generic ?x2 - generic)\n        (mapped ?x1 - generic)\n        (not_usable ?x1 - generic)\n        (mapped_to ?x1 - generic ?x2 - generic)\n        (connected ?x1 - operator ?x2 - num-retries ?x3 - num-retries)\n        (free ?x1 - generic)\n        (done_goal_pre )\n        (done_goal_post )\n        (has_done_a__2 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__3 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__0 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n        (has_done_a__1 ?x1 - generic ?x2 - generic ?x3 - num-retries)\n    )\n\n    (:functions\n        (total-cost ) - number\n        (slot_goodness ?x1 - generic) - number\n        (affinity ?x1 - generic ?x2 - generic) - number\n    )\n\n    \n\n    \n    (:action enabler_operator__a__2\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__2 ?x0 ?x1 try_level_0)) (not (has_done_a__2 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__2 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__2\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__4) (known v__4 certain) (mapped_to ?x1 v__1) (known v__1 certain) (has_done_a__2 ?x0 ?x1 ?pre_level) (not (has_done_a__2 ?x0 ?x1 ?post_level)) (connected a__2 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__2 present)\n        (been_used ?x0)\n        (been_used v__4)\n        (been_used ?x1)\n        (been_used v__1)\n        (has_done_a__2 ?x0 ?x1 ?post_level)\n        (free v__2)\n        (known v__2 certain)\n        (free v__3)\n        (known v__3 certain)\n        (not (mapped v__2))\n        (not (mapped v__3))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__3\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__3 ?x0 ?x1 try_level_0)) (not (has_done_a__3 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__3 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__3\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__1) (known v__1 certain) (mapped_to ?x1 v__0) (known v__0 certain) (has_done_a__3 ?x0 ?x1 ?pre_level) (not (has_done_a__3 ?x0 ?x1 ?post_level)) (connected a__3 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__3 present)\n        (been_used ?x0)\n        (been_used v__1)\n        (been_used ?x1)\n        (been_used v__0)\n        (has_done_a__3 ?x0 ?x1 ?post_level)\n        (free v__2)\n        (known v__2 certain)\n        (free v__3)\n        (known v__3 certain)\n        (not (mapped v__2))\n        (not (mapped v__3))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__0\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__0 ?x0 ?x1 try_level_0)) (not (has_done_a__0 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__0 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__0\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__1) (known v__1 certain) (mapped_to ?x1 v__0) (known v__0 certain) (has_done_a__0 ?x0 ?x1 ?pre_level) (not (has_done_a__0 ?x0 ?x1 ?post_level)) (connected a__0 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__0 present)\n        (been_used ?x0)\n        (been_used v__1)\n        (been_used ?x1)\n        (been_used v__0)\n        (has_done_a__0 ?x0 ?x1 ?post_level)\n        (free v__4)\n        (known v__4 certain)\n        (free v__3)\n        (known v__3 certain)\n        (not (mapped v__4))\n        (not (mapped v__3))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action enabler_operator__a__1\n     :parameters (?x0 - generic ?x1 - generic)\n     :precondition (and (not (has_done_a__1 ?x0 ?x1 try_level_0)) (not (has_done_a__1 ?x0 ?x1 try_level_1)))\n     :effect (and\n        (has_done_a__1 ?x0 ?x1 try_level_0)\n        (increase (total-cost ) 5000))\n    )\n\n\n    (:action a__1\n     :parameters (?x0 - generic ?x1 - generic ?pre_level - num-retries ?post_level - num-retries)\n     :precondition (and (mapped_to ?x0 v__4) (known v__4 certain) (mapped_to ?x1 v__1) (known v__1 certain) (has_done_a__1 ?x0 ?x1 ?pre_level) (not (has_done_a__1 ?x0 ?x1 ?post_level)) (connected a__1 ?pre_level ?post_level))\n     :effect (and\n        (has_done a__1 present)\n        (been_used ?x0)\n        (been_used v__4)\n        (been_used ?x1)\n        (been_used v__1)\n        (has_done_a__1 ?x0 ?x1 ?post_level)\n        (free v__2)\n        (known v__2 certain)\n        (free v__4)\n        (known v__4 certain)\n        (not (mapped v__2))\n        (not (mapped v__4))\n        (increase (total-cost ) 1))\n    )\n\n\n    (:action ask\n     :parameters (?x - generic)\n     :precondition (and (not (known ?x certain)) (not (not_slotfillable ?x)))\n     :effect (and\n        (free ?x)\n        (mapped_to ?x ?x)\n        (known ?x certain)\n        (not (not_usable ?x))\n        (not (mapped ?x))\n        (increase (total-cost ) (slot_goodness ?x)))\n    )\n\n\n    (:action map\n     :parameters (?x - generic ?y - generic)\n     :precondition (and (known ?x certain) (is_mappable ?x ?y) (not (not_mappable ?x ?y)) (not (mapped_to ?x ?y)) (not (new_item ?y)) (been_used ?y))\n     :effect (and\n        (known ?y certain)\n        (mapped_to ?x ?y)\n        (mapped ?x)\n        (not (been_used ?y))\n        (not (not_usable ?y))\n        (increase (total-cost ) (affinity ?x ?y)))\n    )\n\n\n    (:action map--free-alt\n     :parameters (?x - generic ?y - generic)\n     :precondition (and (known ?x certain) (is_mappable ?x ?y) (not (not_mappable ?x ?y)) (not (mapped_to ?x ?y)) (not (new_item ?y)) (been_used ?y) (free ?x))\n     :effect (and\n        (known ?y certain)\n        (mapped_to ?x ?y)\n        (mapped ?x)\n        (not (been_used ?y))\n        (not (not_usable ?y))\n        (free ?y)\n        (increase (total-cost ) 1000))\n    )\n\n)",
  "pddl_problem": "(define (problem default_name-problem)\n    (:domain default_name-domain)\n\n    (:objects\n        \n    )\n\n    (:init\n        (= (slot_goodness v__4) 200000.0)\n        (= (slot_goodness v__1) 100000.0)\n        (= (slot_goodness v__2) 200000.0)\n        (= (slot_goodness v__3) 200000.0)\n        (= (slot_goodness v__0) 100000.0)\n        (= (slot_goodness new_object_generic_0) 150000.0)\n        (= (total-cost ) 0.0)\n        (been_used v__1)\n        (been_used v__4)\n        (been_used v__0)\n        (connected a__1 try_level_0 try_level_1)\n        (connected a__0 try_level_0 try_level_1)\n        (connected a__3 try_level_0 try_level_1)\n        (connected a__2 try_level_0 try_level_1)\n        (new_item new_object_generic_0)\n        (not_slotfillable v__4)\n        (not_slotfillable v__3)\n        (not_slotfillable v__2)\n        (not_mappable new_object_generic_0 v__4)\n        (not_mappable new_object_generic_0 v__2)\n        (not_mappable new_object_generic_0 v__3)\n        (mapped_to v__2 v__2)\n        (mapped_to v__1 v__1)\n        (mapped_to v__3 v__3)\n        (mapped_to v__0 v__0)\n        (mapped_to new_object_generic_0 new_object_generic_0)\n        (mapped_to v__4 v__4)\n    )\n\n    (:goal\n        (has_done a__1 present)\n    )\n\n    \n    \n    (:metric minimize (total-cost ))\n)\n\n",
  "list_of_plans": [],
  "sample_hash": "fb94768546a79193e719bc2eec299a27",
  "agent_info_generator_input": {
    "num_agents": 4,
    "num_var": 5,
    "num_input_parameters": 2,
    "num_samples": 30,
    "num_goal_agents": 1,
    "proportion_coupled_agents": 0.75,
    "proportion_slot_fillable_variables": 0.25,
    "proportion_mappable_variables": 0.0,
    "num_var_types": 0,
    "slot_filler_option": null,
    "name_generator": "NUMBER",
    "error_message": null
  },
  "compiler_planner_lag_millisecond": 202.947998046875
}